
// This source is generated by the Vector source generator.
// Debugging should be done in the script.
#include "Vector.h"
#include <cstddef>


//---------------------------------
//        vec4 data access
//---------------------------------

vec4::vec4() { m_v1 = 0; m_v2 = 0; m_v3 = 0; m_v4 = 0; m_vecPtr = NULL;  }
vec4::vec4(float value) { m_v1 = value; m_v2 = value; m_v3 = value; m_v4 = value; m_vecPtr = NULL;  }
vec4::vec4(float val1, float val2, float val3, float val4) { m_v1 = val1; m_v2 = val2; m_v3 = val3; m_v4 = val4; m_vecPtr = NULL;  }
vec4::vec4(float val1, vec3 val2) { m_v1 = val1; m_v2 = val2.x(); m_v3 = val2.y(); m_v4 = val2.z(); m_vecPtr = NULL;  }
vec4::vec4(vec3 val1, float val2) { m_v1 = val1.x(); m_v2 = val1.y(); m_v3 = val1.z(); m_v4 = val2; m_vecPtr = NULL;  }
vec4::vec4(float val1, float val2, vec2 val3) { m_v1 = val1; m_v2 = val2; m_v3 = val3.x(); m_v4 = val3.y(); m_vecPtr = NULL;  }
vec4::vec4(float val1, vec2 val2, float val3) { m_v1 = val1; m_v2 = val2.x(); m_v3 = val2.y(); m_v4 = val3; m_vecPtr = NULL;  }
vec4::vec4(vec2 val1, float val2, float val3) { m_v1 = val1.x(); m_v2 = val1.y(); m_v3 = val2; m_v4 = val3; m_vecPtr = NULL;  }
vec4::vec4(vec2 val1, vec2 val2) { m_v1 = val1.x(); m_v2 = val1.y(); m_v3 = val2.x(); m_v4 = val2.y(); m_vecPtr = NULL;  }

// dtor
vec4::~vec4() { if(m_vecPtr) delete m_vecPtr; }

// scalar returns
float& vec4::x() { return m_v1; }
const float& vec4::x() const { return m_v1; }
float& vec4::y() { return m_v2; }
const float& vec4::y() const { return m_v2; }
float& vec4::z() { return m_v3; }
const float& vec4::z() const { return m_v3; }
float& vec4::w() { return m_v4; }
const float& vec4::w() const { return m_v4; }
float& vec4::r() { return m_v1; }
const float& vec4::r() const { return m_v1; }
float& vec4::g() { return m_v2; }
const float& vec4::g() const { return m_v2; }
float& vec4::b() { return m_v3; }
const float& vec4::b() const { return m_v3; }
float& vec4::a() { return m_v4; }
const float& vec4::a() const { return m_v4; }
float& vec4::s() { return m_v1; }
const float& vec4::s() const { return m_v1; }
float& vec4::t() { return m_v2; }
const float& vec4::t() const { return m_v2; }
float& vec4::p() { return m_v3; }
const float& vec4::p() const { return m_v3; }
float& vec4::q() { return m_v4; }
const float& vec4::q() const { return m_v4; }

// vec2 returns
vec2 vec4::xx() { return vec2(m_v1, m_v1); }
vec2 vec4::xy() { return vec2(m_v1, m_v2); }
vec2 vec4::xz() { return vec2(m_v1, m_v3); }
vec2 vec4::xw() { return vec2(m_v1, m_v4); }
vec2 vec4::yx() { return vec2(m_v2, m_v1); }
vec2 vec4::yy() { return vec2(m_v2, m_v2); }
vec2 vec4::yz() { return vec2(m_v2, m_v3); }
vec2 vec4::yw() { return vec2(m_v2, m_v4); }
vec2 vec4::zx() { return vec2(m_v3, m_v1); }
vec2 vec4::zy() { return vec2(m_v3, m_v2); }
vec2 vec4::zz() { return vec2(m_v3, m_v3); }
vec2 vec4::zw() { return vec2(m_v3, m_v4); }
vec2 vec4::wx() { return vec2(m_v4, m_v1); }
vec2 vec4::wy() { return vec2(m_v4, m_v2); }
vec2 vec4::wz() { return vec2(m_v4, m_v3); }
vec2 vec4::ww() { return vec2(m_v4, m_v4); }
vec2 vec4::rr() { return vec2(m_v1, m_v1); }
vec2 vec4::rg() { return vec2(m_v1, m_v2); }
vec2 vec4::rb() { return vec2(m_v1, m_v3); }
vec2 vec4::ra() { return vec2(m_v1, m_v4); }
vec2 vec4::gr() { return vec2(m_v2, m_v1); }
vec2 vec4::gg() { return vec2(m_v2, m_v2); }
vec2 vec4::gb() { return vec2(m_v2, m_v3); }
vec2 vec4::ga() { return vec2(m_v2, m_v4); }
vec2 vec4::br() { return vec2(m_v3, m_v1); }
vec2 vec4::bg() { return vec2(m_v3, m_v2); }
vec2 vec4::bb() { return vec2(m_v3, m_v3); }
vec2 vec4::ba() { return vec2(m_v3, m_v4); }
vec2 vec4::ar() { return vec2(m_v4, m_v1); }
vec2 vec4::ag() { return vec2(m_v4, m_v2); }
vec2 vec4::ab() { return vec2(m_v4, m_v3); }
vec2 vec4::aa() { return vec2(m_v4, m_v4); }
vec2 vec4::ss() { return vec2(m_v1, m_v1); }
vec2 vec4::st() { return vec2(m_v1, m_v2); }
vec2 vec4::sp() { return vec2(m_v1, m_v3); }
vec2 vec4::sq() { return vec2(m_v1, m_v4); }
vec2 vec4::ts() { return vec2(m_v2, m_v1); }
vec2 vec4::tt() { return vec2(m_v2, m_v2); }
vec2 vec4::tp() { return vec2(m_v2, m_v3); }
vec2 vec4::tq() { return vec2(m_v2, m_v4); }
vec2 vec4::ps() { return vec2(m_v3, m_v1); }
vec2 vec4::pt() { return vec2(m_v3, m_v2); }
vec2 vec4::pp() { return vec2(m_v3, m_v3); }
vec2 vec4::pq() { return vec2(m_v3, m_v4); }
vec2 vec4::qs() { return vec2(m_v4, m_v1); }
vec2 vec4::qt() { return vec2(m_v4, m_v2); }
vec2 vec4::qp() { return vec2(m_v4, m_v3); }
vec2 vec4::qq() { return vec2(m_v4, m_v4); }

// vec3 returns
vec3 vec4::xxx() { return vec3(m_v1, m_v1, m_v1); }
vec3 vec4::xxy() { return vec3(m_v1, m_v1, m_v2); }
vec3 vec4::xxz() { return vec3(m_v1, m_v1, m_v3); }
vec3 vec4::xxw() { return vec3(m_v1, m_v1, m_v4); }
vec3 vec4::xyx() { return vec3(m_v1, m_v2, m_v1); }
vec3 vec4::xyy() { return vec3(m_v1, m_v2, m_v2); }
vec3 vec4::xyz() { return vec3(m_v1, m_v2, m_v3); }
vec3 vec4::xyw() { return vec3(m_v1, m_v2, m_v4); }
vec3 vec4::xzx() { return vec3(m_v1, m_v3, m_v1); }
vec3 vec4::xzy() { return vec3(m_v1, m_v3, m_v2); }
vec3 vec4::xzz() { return vec3(m_v1, m_v3, m_v3); }
vec3 vec4::xzw() { return vec3(m_v1, m_v3, m_v4); }
vec3 vec4::xwx() { return vec3(m_v1, m_v4, m_v1); }
vec3 vec4::xwy() { return vec3(m_v1, m_v4, m_v2); }
vec3 vec4::xwz() { return vec3(m_v1, m_v4, m_v3); }
vec3 vec4::xww() { return vec3(m_v1, m_v4, m_v4); }
vec3 vec4::yxx() { return vec3(m_v2, m_v1, m_v1); }
vec3 vec4::yxy() { return vec3(m_v2, m_v1, m_v2); }
vec3 vec4::yxz() { return vec3(m_v2, m_v1, m_v3); }
vec3 vec4::yxw() { return vec3(m_v2, m_v1, m_v4); }
vec3 vec4::yyx() { return vec3(m_v2, m_v2, m_v1); }
vec3 vec4::yyy() { return vec3(m_v2, m_v2, m_v2); }
vec3 vec4::yyz() { return vec3(m_v2, m_v2, m_v3); }
vec3 vec4::yyw() { return vec3(m_v2, m_v2, m_v4); }
vec3 vec4::yzx() { return vec3(m_v2, m_v3, m_v1); }
vec3 vec4::yzy() { return vec3(m_v2, m_v3, m_v2); }
vec3 vec4::yzz() { return vec3(m_v2, m_v3, m_v3); }
vec3 vec4::yzw() { return vec3(m_v2, m_v3, m_v4); }
vec3 vec4::ywx() { return vec3(m_v2, m_v4, m_v1); }
vec3 vec4::ywy() { return vec3(m_v2, m_v4, m_v2); }
vec3 vec4::ywz() { return vec3(m_v2, m_v4, m_v3); }
vec3 vec4::yww() { return vec3(m_v2, m_v4, m_v4); }
vec3 vec4::zxx() { return vec3(m_v3, m_v1, m_v1); }
vec3 vec4::zxy() { return vec3(m_v3, m_v1, m_v2); }
vec3 vec4::zxz() { return vec3(m_v3, m_v1, m_v3); }
vec3 vec4::zxw() { return vec3(m_v3, m_v1, m_v4); }
vec3 vec4::zyx() { return vec3(m_v3, m_v2, m_v1); }
vec3 vec4::zyy() { return vec3(m_v3, m_v2, m_v2); }
vec3 vec4::zyz() { return vec3(m_v3, m_v2, m_v3); }
vec3 vec4::zyw() { return vec3(m_v3, m_v2, m_v4); }
vec3 vec4::zzx() { return vec3(m_v3, m_v3, m_v1); }
vec3 vec4::zzy() { return vec3(m_v3, m_v3, m_v2); }
vec3 vec4::zzz() { return vec3(m_v3, m_v3, m_v3); }
vec3 vec4::zzw() { return vec3(m_v3, m_v3, m_v4); }
vec3 vec4::zwx() { return vec3(m_v3, m_v4, m_v1); }
vec3 vec4::zwy() { return vec3(m_v3, m_v4, m_v2); }
vec3 vec4::zwz() { return vec3(m_v3, m_v4, m_v3); }
vec3 vec4::zww() { return vec3(m_v3, m_v4, m_v4); }
vec3 vec4::wxx() { return vec3(m_v4, m_v1, m_v1); }
vec3 vec4::wxy() { return vec3(m_v4, m_v1, m_v2); }
vec3 vec4::wxz() { return vec3(m_v4, m_v1, m_v3); }
vec3 vec4::wxw() { return vec3(m_v4, m_v1, m_v4); }
vec3 vec4::wyx() { return vec3(m_v4, m_v2, m_v1); }
vec3 vec4::wyy() { return vec3(m_v4, m_v2, m_v2); }
vec3 vec4::wyz() { return vec3(m_v4, m_v2, m_v3); }
vec3 vec4::wyw() { return vec3(m_v4, m_v2, m_v4); }
vec3 vec4::wzx() { return vec3(m_v4, m_v3, m_v1); }
vec3 vec4::wzy() { return vec3(m_v4, m_v3, m_v2); }
vec3 vec4::wzz() { return vec3(m_v4, m_v3, m_v3); }
vec3 vec4::wzw() { return vec3(m_v4, m_v3, m_v4); }
vec3 vec4::wwx() { return vec3(m_v4, m_v4, m_v1); }
vec3 vec4::wwy() { return vec3(m_v4, m_v4, m_v2); }
vec3 vec4::wwz() { return vec3(m_v4, m_v4, m_v3); }
vec3 vec4::www() { return vec3(m_v4, m_v4, m_v4); }
vec3 vec4::rrr() { return vec3(m_v1, m_v1, m_v1); }
vec3 vec4::rrg() { return vec3(m_v1, m_v1, m_v2); }
vec3 vec4::rrb() { return vec3(m_v1, m_v1, m_v3); }
vec3 vec4::rra() { return vec3(m_v1, m_v1, m_v4); }
vec3 vec4::rgr() { return vec3(m_v1, m_v2, m_v1); }
vec3 vec4::rgg() { return vec3(m_v1, m_v2, m_v2); }
vec3 vec4::rgb() { return vec3(m_v1, m_v2, m_v3); }
vec3 vec4::rga() { return vec3(m_v1, m_v2, m_v4); }
vec3 vec4::rbr() { return vec3(m_v1, m_v3, m_v1); }
vec3 vec4::rbg() { return vec3(m_v1, m_v3, m_v2); }
vec3 vec4::rbb() { return vec3(m_v1, m_v3, m_v3); }
vec3 vec4::rba() { return vec3(m_v1, m_v3, m_v4); }
vec3 vec4::rar() { return vec3(m_v1, m_v4, m_v1); }
vec3 vec4::rag() { return vec3(m_v1, m_v4, m_v2); }
vec3 vec4::rab() { return vec3(m_v1, m_v4, m_v3); }
vec3 vec4::raa() { return vec3(m_v1, m_v4, m_v4); }
vec3 vec4::grr() { return vec3(m_v2, m_v1, m_v1); }
vec3 vec4::grg() { return vec3(m_v2, m_v1, m_v2); }
vec3 vec4::grb() { return vec3(m_v2, m_v1, m_v3); }
vec3 vec4::gra() { return vec3(m_v2, m_v1, m_v4); }
vec3 vec4::ggr() { return vec3(m_v2, m_v2, m_v1); }
vec3 vec4::ggg() { return vec3(m_v2, m_v2, m_v2); }
vec3 vec4::ggb() { return vec3(m_v2, m_v2, m_v3); }
vec3 vec4::gga() { return vec3(m_v2, m_v2, m_v4); }
vec3 vec4::gbr() { return vec3(m_v2, m_v3, m_v1); }
vec3 vec4::gbg() { return vec3(m_v2, m_v3, m_v2); }
vec3 vec4::gbb() { return vec3(m_v2, m_v3, m_v3); }
vec3 vec4::gba() { return vec3(m_v2, m_v3, m_v4); }
vec3 vec4::gar() { return vec3(m_v2, m_v4, m_v1); }
vec3 vec4::gag() { return vec3(m_v2, m_v4, m_v2); }
vec3 vec4::gab() { return vec3(m_v2, m_v4, m_v3); }
vec3 vec4::gaa() { return vec3(m_v2, m_v4, m_v4); }
vec3 vec4::brr() { return vec3(m_v3, m_v1, m_v1); }
vec3 vec4::brg() { return vec3(m_v3, m_v1, m_v2); }
vec3 vec4::brb() { return vec3(m_v3, m_v1, m_v3); }
vec3 vec4::bra() { return vec3(m_v3, m_v1, m_v4); }
vec3 vec4::bgr() { return vec3(m_v3, m_v2, m_v1); }
vec3 vec4::bgg() { return vec3(m_v3, m_v2, m_v2); }
vec3 vec4::bgb() { return vec3(m_v3, m_v2, m_v3); }
vec3 vec4::bga() { return vec3(m_v3, m_v2, m_v4); }
vec3 vec4::bbr() { return vec3(m_v3, m_v3, m_v1); }
vec3 vec4::bbg() { return vec3(m_v3, m_v3, m_v2); }
vec3 vec4::bbb() { return vec3(m_v3, m_v3, m_v3); }
vec3 vec4::bba() { return vec3(m_v3, m_v3, m_v4); }
vec3 vec4::bar() { return vec3(m_v3, m_v4, m_v1); }
vec3 vec4::bag() { return vec3(m_v3, m_v4, m_v2); }
vec3 vec4::bab() { return vec3(m_v3, m_v4, m_v3); }
vec3 vec4::baa() { return vec3(m_v3, m_v4, m_v4); }
vec3 vec4::arr() { return vec3(m_v4, m_v1, m_v1); }
vec3 vec4::arg() { return vec3(m_v4, m_v1, m_v2); }
vec3 vec4::arb() { return vec3(m_v4, m_v1, m_v3); }
vec3 vec4::ara() { return vec3(m_v4, m_v1, m_v4); }
vec3 vec4::agr() { return vec3(m_v4, m_v2, m_v1); }
vec3 vec4::agg() { return vec3(m_v4, m_v2, m_v2); }
vec3 vec4::agb() { return vec3(m_v4, m_v2, m_v3); }
vec3 vec4::aga() { return vec3(m_v4, m_v2, m_v4); }
vec3 vec4::abr() { return vec3(m_v4, m_v3, m_v1); }
vec3 vec4::abg() { return vec3(m_v4, m_v3, m_v2); }
vec3 vec4::abb() { return vec3(m_v4, m_v3, m_v3); }
vec3 vec4::aba() { return vec3(m_v4, m_v3, m_v4); }
vec3 vec4::aar() { return vec3(m_v4, m_v4, m_v1); }
vec3 vec4::aag() { return vec3(m_v4, m_v4, m_v2); }
vec3 vec4::aab() { return vec3(m_v4, m_v4, m_v3); }
vec3 vec4::aaa() { return vec3(m_v4, m_v4, m_v4); }
vec3 vec4::sss() { return vec3(m_v1, m_v1, m_v1); }
vec3 vec4::sst() { return vec3(m_v1, m_v1, m_v2); }
vec3 vec4::ssp() { return vec3(m_v1, m_v1, m_v3); }
vec3 vec4::ssq() { return vec3(m_v1, m_v1, m_v4); }
vec3 vec4::sts() { return vec3(m_v1, m_v2, m_v1); }
vec3 vec4::stt() { return vec3(m_v1, m_v2, m_v2); }
vec3 vec4::stp() { return vec3(m_v1, m_v2, m_v3); }
vec3 vec4::stq() { return vec3(m_v1, m_v2, m_v4); }
vec3 vec4::sps() { return vec3(m_v1, m_v3, m_v1); }
vec3 vec4::spt() { return vec3(m_v1, m_v3, m_v2); }
vec3 vec4::spp() { return vec3(m_v1, m_v3, m_v3); }
vec3 vec4::spq() { return vec3(m_v1, m_v3, m_v4); }
vec3 vec4::sqs() { return vec3(m_v1, m_v4, m_v1); }
vec3 vec4::sqt() { return vec3(m_v1, m_v4, m_v2); }
vec3 vec4::sqp() { return vec3(m_v1, m_v4, m_v3); }
vec3 vec4::sqq() { return vec3(m_v1, m_v4, m_v4); }
vec3 vec4::tss() { return vec3(m_v2, m_v1, m_v1); }
vec3 vec4::tst() { return vec3(m_v2, m_v1, m_v2); }
vec3 vec4::tsp() { return vec3(m_v2, m_v1, m_v3); }
vec3 vec4::tsq() { return vec3(m_v2, m_v1, m_v4); }
vec3 vec4::tts() { return vec3(m_v2, m_v2, m_v1); }
vec3 vec4::ttt() { return vec3(m_v2, m_v2, m_v2); }
vec3 vec4::ttp() { return vec3(m_v2, m_v2, m_v3); }
vec3 vec4::ttq() { return vec3(m_v2, m_v2, m_v4); }
vec3 vec4::tps() { return vec3(m_v2, m_v3, m_v1); }
vec3 vec4::tpt() { return vec3(m_v2, m_v3, m_v2); }
vec3 vec4::tpp() { return vec3(m_v2, m_v3, m_v3); }
vec3 vec4::tpq() { return vec3(m_v2, m_v3, m_v4); }
vec3 vec4::tqs() { return vec3(m_v2, m_v4, m_v1); }
vec3 vec4::tqt() { return vec3(m_v2, m_v4, m_v2); }
vec3 vec4::tqp() { return vec3(m_v2, m_v4, m_v3); }
vec3 vec4::tqq() { return vec3(m_v2, m_v4, m_v4); }
vec3 vec4::pss() { return vec3(m_v3, m_v1, m_v1); }
vec3 vec4::pst() { return vec3(m_v3, m_v1, m_v2); }
vec3 vec4::psp() { return vec3(m_v3, m_v1, m_v3); }
vec3 vec4::psq() { return vec3(m_v3, m_v1, m_v4); }
vec3 vec4::pts() { return vec3(m_v3, m_v2, m_v1); }
vec3 vec4::ptt() { return vec3(m_v3, m_v2, m_v2); }
vec3 vec4::ptp() { return vec3(m_v3, m_v2, m_v3); }
vec3 vec4::ptq() { return vec3(m_v3, m_v2, m_v4); }
vec3 vec4::pps() { return vec3(m_v3, m_v3, m_v1); }
vec3 vec4::ppt() { return vec3(m_v3, m_v3, m_v2); }
vec3 vec4::ppp() { return vec3(m_v3, m_v3, m_v3); }
vec3 vec4::ppq() { return vec3(m_v3, m_v3, m_v4); }
vec3 vec4::pqs() { return vec3(m_v3, m_v4, m_v1); }
vec3 vec4::pqt() { return vec3(m_v3, m_v4, m_v2); }
vec3 vec4::pqp() { return vec3(m_v3, m_v4, m_v3); }
vec3 vec4::pqq() { return vec3(m_v3, m_v4, m_v4); }
vec3 vec4::qss() { return vec3(m_v4, m_v1, m_v1); }
vec3 vec4::qst() { return vec3(m_v4, m_v1, m_v2); }
vec3 vec4::qsp() { return vec3(m_v4, m_v1, m_v3); }
vec3 vec4::qsq() { return vec3(m_v4, m_v1, m_v4); }
vec3 vec4::qts() { return vec3(m_v4, m_v2, m_v1); }
vec3 vec4::qtt() { return vec3(m_v4, m_v2, m_v2); }
vec3 vec4::qtp() { return vec3(m_v4, m_v2, m_v3); }
vec3 vec4::qtq() { return vec3(m_v4, m_v2, m_v4); }
vec3 vec4::qps() { return vec3(m_v4, m_v3, m_v1); }
vec3 vec4::qpt() { return vec3(m_v4, m_v3, m_v2); }
vec3 vec4::qpp() { return vec3(m_v4, m_v3, m_v3); }
vec3 vec4::qpq() { return vec3(m_v4, m_v3, m_v4); }
vec3 vec4::qqs() { return vec3(m_v4, m_v4, m_v1); }
vec3 vec4::qqt() { return vec3(m_v4, m_v4, m_v2); }
vec3 vec4::qqp() { return vec3(m_v4, m_v4, m_v3); }
vec3 vec4::qqq() { return vec3(m_v4, m_v4, m_v4); }

// vec4 returns
vec4 vec4::xxxx() { return vec4(m_v1, m_v1, m_v1, m_v1); }
vec4 vec4::xxxy() { return vec4(m_v1, m_v1, m_v1, m_v2); }
vec4 vec4::xxxz() { return vec4(m_v1, m_v1, m_v1, m_v3); }
vec4 vec4::xxxw() { return vec4(m_v1, m_v1, m_v1, m_v4); }
vec4 vec4::xxyx() { return vec4(m_v1, m_v1, m_v2, m_v1); }
vec4 vec4::xxyy() { return vec4(m_v1, m_v1, m_v2, m_v2); }
vec4 vec4::xxyz() { return vec4(m_v1, m_v1, m_v2, m_v3); }
vec4 vec4::xxyw() { return vec4(m_v1, m_v1, m_v2, m_v4); }
vec4 vec4::xxzx() { return vec4(m_v1, m_v1, m_v3, m_v1); }
vec4 vec4::xxzy() { return vec4(m_v1, m_v1, m_v3, m_v2); }
vec4 vec4::xxzz() { return vec4(m_v1, m_v1, m_v3, m_v3); }
vec4 vec4::xxzw() { return vec4(m_v1, m_v1, m_v3, m_v4); }
vec4 vec4::xxwx() { return vec4(m_v1, m_v1, m_v4, m_v1); }
vec4 vec4::xxwy() { return vec4(m_v1, m_v1, m_v4, m_v2); }
vec4 vec4::xxwz() { return vec4(m_v1, m_v1, m_v4, m_v3); }
vec4 vec4::xxww() { return vec4(m_v1, m_v1, m_v4, m_v4); }
vec4 vec4::xyxx() { return vec4(m_v1, m_v2, m_v1, m_v1); }
vec4 vec4::xyxy() { return vec4(m_v1, m_v2, m_v1, m_v2); }
vec4 vec4::xyxz() { return vec4(m_v1, m_v2, m_v1, m_v3); }
vec4 vec4::xyxw() { return vec4(m_v1, m_v2, m_v1, m_v4); }
vec4 vec4::xyyx() { return vec4(m_v1, m_v2, m_v2, m_v1); }
vec4 vec4::xyyy() { return vec4(m_v1, m_v2, m_v2, m_v2); }
vec4 vec4::xyyz() { return vec4(m_v1, m_v2, m_v2, m_v3); }
vec4 vec4::xyyw() { return vec4(m_v1, m_v2, m_v2, m_v4); }
vec4 vec4::xyzx() { return vec4(m_v1, m_v2, m_v3, m_v1); }
vec4 vec4::xyzy() { return vec4(m_v1, m_v2, m_v3, m_v2); }
vec4 vec4::xyzz() { return vec4(m_v1, m_v2, m_v3, m_v3); }
vec4 vec4::xyzw() { return vec4(m_v1, m_v2, m_v3, m_v4); }
vec4 vec4::xywx() { return vec4(m_v1, m_v2, m_v4, m_v1); }
vec4 vec4::xywy() { return vec4(m_v1, m_v2, m_v4, m_v2); }
vec4 vec4::xywz() { return vec4(m_v1, m_v2, m_v4, m_v3); }
vec4 vec4::xyww() { return vec4(m_v1, m_v2, m_v4, m_v4); }
vec4 vec4::xzxx() { return vec4(m_v1, m_v3, m_v1, m_v1); }
vec4 vec4::xzxy() { return vec4(m_v1, m_v3, m_v1, m_v2); }
vec4 vec4::xzxz() { return vec4(m_v1, m_v3, m_v1, m_v3); }
vec4 vec4::xzxw() { return vec4(m_v1, m_v3, m_v1, m_v4); }
vec4 vec4::xzyx() { return vec4(m_v1, m_v3, m_v2, m_v1); }
vec4 vec4::xzyy() { return vec4(m_v1, m_v3, m_v2, m_v2); }
vec4 vec4::xzyz() { return vec4(m_v1, m_v3, m_v2, m_v3); }
vec4 vec4::xzyw() { return vec4(m_v1, m_v3, m_v2, m_v4); }
vec4 vec4::xzzx() { return vec4(m_v1, m_v3, m_v3, m_v1); }
vec4 vec4::xzzy() { return vec4(m_v1, m_v3, m_v3, m_v2); }
vec4 vec4::xzzz() { return vec4(m_v1, m_v3, m_v3, m_v3); }
vec4 vec4::xzzw() { return vec4(m_v1, m_v3, m_v3, m_v4); }
vec4 vec4::xzwx() { return vec4(m_v1, m_v3, m_v4, m_v1); }
vec4 vec4::xzwy() { return vec4(m_v1, m_v3, m_v4, m_v2); }
vec4 vec4::xzwz() { return vec4(m_v1, m_v3, m_v4, m_v3); }
vec4 vec4::xzww() { return vec4(m_v1, m_v3, m_v4, m_v4); }
vec4 vec4::xwxx() { return vec4(m_v1, m_v4, m_v1, m_v1); }
vec4 vec4::xwxy() { return vec4(m_v1, m_v4, m_v1, m_v2); }
vec4 vec4::xwxz() { return vec4(m_v1, m_v4, m_v1, m_v3); }
vec4 vec4::xwxw() { return vec4(m_v1, m_v4, m_v1, m_v4); }
vec4 vec4::xwyx() { return vec4(m_v1, m_v4, m_v2, m_v1); }
vec4 vec4::xwyy() { return vec4(m_v1, m_v4, m_v2, m_v2); }
vec4 vec4::xwyz() { return vec4(m_v1, m_v4, m_v2, m_v3); }
vec4 vec4::xwyw() { return vec4(m_v1, m_v4, m_v2, m_v4); }
vec4 vec4::xwzx() { return vec4(m_v1, m_v4, m_v3, m_v1); }
vec4 vec4::xwzy() { return vec4(m_v1, m_v4, m_v3, m_v2); }
vec4 vec4::xwzz() { return vec4(m_v1, m_v4, m_v3, m_v3); }
vec4 vec4::xwzw() { return vec4(m_v1, m_v4, m_v3, m_v4); }
vec4 vec4::xwwx() { return vec4(m_v1, m_v4, m_v4, m_v1); }
vec4 vec4::xwwy() { return vec4(m_v1, m_v4, m_v4, m_v2); }
vec4 vec4::xwwz() { return vec4(m_v1, m_v4, m_v4, m_v3); }
vec4 vec4::xwww() { return vec4(m_v1, m_v4, m_v4, m_v4); }
vec4 vec4::yxxx() { return vec4(m_v2, m_v1, m_v1, m_v1); }
vec4 vec4::yxxy() { return vec4(m_v2, m_v1, m_v1, m_v2); }
vec4 vec4::yxxz() { return vec4(m_v2, m_v1, m_v1, m_v3); }
vec4 vec4::yxxw() { return vec4(m_v2, m_v1, m_v1, m_v4); }
vec4 vec4::yxyx() { return vec4(m_v2, m_v1, m_v2, m_v1); }
vec4 vec4::yxyy() { return vec4(m_v2, m_v1, m_v2, m_v2); }
vec4 vec4::yxyz() { return vec4(m_v2, m_v1, m_v2, m_v3); }
vec4 vec4::yxyw() { return vec4(m_v2, m_v1, m_v2, m_v4); }
vec4 vec4::yxzx() { return vec4(m_v2, m_v1, m_v3, m_v1); }
vec4 vec4::yxzy() { return vec4(m_v2, m_v1, m_v3, m_v2); }
vec4 vec4::yxzz() { return vec4(m_v2, m_v1, m_v3, m_v3); }
vec4 vec4::yxzw() { return vec4(m_v2, m_v1, m_v3, m_v4); }
vec4 vec4::yxwx() { return vec4(m_v2, m_v1, m_v4, m_v1); }
vec4 vec4::yxwy() { return vec4(m_v2, m_v1, m_v4, m_v2); }
vec4 vec4::yxwz() { return vec4(m_v2, m_v1, m_v4, m_v3); }
vec4 vec4::yxww() { return vec4(m_v2, m_v1, m_v4, m_v4); }
vec4 vec4::yyxx() { return vec4(m_v2, m_v2, m_v1, m_v1); }
vec4 vec4::yyxy() { return vec4(m_v2, m_v2, m_v1, m_v2); }
vec4 vec4::yyxz() { return vec4(m_v2, m_v2, m_v1, m_v3); }
vec4 vec4::yyxw() { return vec4(m_v2, m_v2, m_v1, m_v4); }
vec4 vec4::yyyx() { return vec4(m_v2, m_v2, m_v2, m_v1); }
vec4 vec4::yyyy() { return vec4(m_v2, m_v2, m_v2, m_v2); }
vec4 vec4::yyyz() { return vec4(m_v2, m_v2, m_v2, m_v3); }
vec4 vec4::yyyw() { return vec4(m_v2, m_v2, m_v2, m_v4); }
vec4 vec4::yyzx() { return vec4(m_v2, m_v2, m_v3, m_v1); }
vec4 vec4::yyzy() { return vec4(m_v2, m_v2, m_v3, m_v2); }
vec4 vec4::yyzz() { return vec4(m_v2, m_v2, m_v3, m_v3); }
vec4 vec4::yyzw() { return vec4(m_v2, m_v2, m_v3, m_v4); }
vec4 vec4::yywx() { return vec4(m_v2, m_v2, m_v4, m_v1); }
vec4 vec4::yywy() { return vec4(m_v2, m_v2, m_v4, m_v2); }
vec4 vec4::yywz() { return vec4(m_v2, m_v2, m_v4, m_v3); }
vec4 vec4::yyww() { return vec4(m_v2, m_v2, m_v4, m_v4); }
vec4 vec4::yzxx() { return vec4(m_v2, m_v3, m_v1, m_v1); }
vec4 vec4::yzxy() { return vec4(m_v2, m_v3, m_v1, m_v2); }
vec4 vec4::yzxz() { return vec4(m_v2, m_v3, m_v1, m_v3); }
vec4 vec4::yzxw() { return vec4(m_v2, m_v3, m_v1, m_v4); }
vec4 vec4::yzyx() { return vec4(m_v2, m_v3, m_v2, m_v1); }
vec4 vec4::yzyy() { return vec4(m_v2, m_v3, m_v2, m_v2); }
vec4 vec4::yzyz() { return vec4(m_v2, m_v3, m_v2, m_v3); }
vec4 vec4::yzyw() { return vec4(m_v2, m_v3, m_v2, m_v4); }
vec4 vec4::yzzx() { return vec4(m_v2, m_v3, m_v3, m_v1); }
vec4 vec4::yzzy() { return vec4(m_v2, m_v3, m_v3, m_v2); }
vec4 vec4::yzzz() { return vec4(m_v2, m_v3, m_v3, m_v3); }
vec4 vec4::yzzw() { return vec4(m_v2, m_v3, m_v3, m_v4); }
vec4 vec4::yzwx() { return vec4(m_v2, m_v3, m_v4, m_v1); }
vec4 vec4::yzwy() { return vec4(m_v2, m_v3, m_v4, m_v2); }
vec4 vec4::yzwz() { return vec4(m_v2, m_v3, m_v4, m_v3); }
vec4 vec4::yzww() { return vec4(m_v2, m_v3, m_v4, m_v4); }
vec4 vec4::ywxx() { return vec4(m_v2, m_v4, m_v1, m_v1); }
vec4 vec4::ywxy() { return vec4(m_v2, m_v4, m_v1, m_v2); }
vec4 vec4::ywxz() { return vec4(m_v2, m_v4, m_v1, m_v3); }
vec4 vec4::ywxw() { return vec4(m_v2, m_v4, m_v1, m_v4); }
vec4 vec4::ywyx() { return vec4(m_v2, m_v4, m_v2, m_v1); }
vec4 vec4::ywyy() { return vec4(m_v2, m_v4, m_v2, m_v2); }
vec4 vec4::ywyz() { return vec4(m_v2, m_v4, m_v2, m_v3); }
vec4 vec4::ywyw() { return vec4(m_v2, m_v4, m_v2, m_v4); }
vec4 vec4::ywzx() { return vec4(m_v2, m_v4, m_v3, m_v1); }
vec4 vec4::ywzy() { return vec4(m_v2, m_v4, m_v3, m_v2); }
vec4 vec4::ywzz() { return vec4(m_v2, m_v4, m_v3, m_v3); }
vec4 vec4::ywzw() { return vec4(m_v2, m_v4, m_v3, m_v4); }
vec4 vec4::ywwx() { return vec4(m_v2, m_v4, m_v4, m_v1); }
vec4 vec4::ywwy() { return vec4(m_v2, m_v4, m_v4, m_v2); }
vec4 vec4::ywwz() { return vec4(m_v2, m_v4, m_v4, m_v3); }
vec4 vec4::ywww() { return vec4(m_v2, m_v4, m_v4, m_v4); }
vec4 vec4::zxxx() { return vec4(m_v3, m_v1, m_v1, m_v1); }
vec4 vec4::zxxy() { return vec4(m_v3, m_v1, m_v1, m_v2); }
vec4 vec4::zxxz() { return vec4(m_v3, m_v1, m_v1, m_v3); }
vec4 vec4::zxxw() { return vec4(m_v3, m_v1, m_v1, m_v4); }
vec4 vec4::zxyx() { return vec4(m_v3, m_v1, m_v2, m_v1); }
vec4 vec4::zxyy() { return vec4(m_v3, m_v1, m_v2, m_v2); }
vec4 vec4::zxyz() { return vec4(m_v3, m_v1, m_v2, m_v3); }
vec4 vec4::zxyw() { return vec4(m_v3, m_v1, m_v2, m_v4); }
vec4 vec4::zxzx() { return vec4(m_v3, m_v1, m_v3, m_v1); }
vec4 vec4::zxzy() { return vec4(m_v3, m_v1, m_v3, m_v2); }
vec4 vec4::zxzz() { return vec4(m_v3, m_v1, m_v3, m_v3); }
vec4 vec4::zxzw() { return vec4(m_v3, m_v1, m_v3, m_v4); }
vec4 vec4::zxwx() { return vec4(m_v3, m_v1, m_v4, m_v1); }
vec4 vec4::zxwy() { return vec4(m_v3, m_v1, m_v4, m_v2); }
vec4 vec4::zxwz() { return vec4(m_v3, m_v1, m_v4, m_v3); }
vec4 vec4::zxww() { return vec4(m_v3, m_v1, m_v4, m_v4); }
vec4 vec4::zyxx() { return vec4(m_v3, m_v2, m_v1, m_v1); }
vec4 vec4::zyxy() { return vec4(m_v3, m_v2, m_v1, m_v2); }
vec4 vec4::zyxz() { return vec4(m_v3, m_v2, m_v1, m_v3); }
vec4 vec4::zyxw() { return vec4(m_v3, m_v2, m_v1, m_v4); }
vec4 vec4::zyyx() { return vec4(m_v3, m_v2, m_v2, m_v1); }
vec4 vec4::zyyy() { return vec4(m_v3, m_v2, m_v2, m_v2); }
vec4 vec4::zyyz() { return vec4(m_v3, m_v2, m_v2, m_v3); }
vec4 vec4::zyyw() { return vec4(m_v3, m_v2, m_v2, m_v4); }
vec4 vec4::zyzx() { return vec4(m_v3, m_v2, m_v3, m_v1); }
vec4 vec4::zyzy() { return vec4(m_v3, m_v2, m_v3, m_v2); }
vec4 vec4::zyzz() { return vec4(m_v3, m_v2, m_v3, m_v3); }
vec4 vec4::zyzw() { return vec4(m_v3, m_v2, m_v3, m_v4); }
vec4 vec4::zywx() { return vec4(m_v3, m_v2, m_v4, m_v1); }
vec4 vec4::zywy() { return vec4(m_v3, m_v2, m_v4, m_v2); }
vec4 vec4::zywz() { return vec4(m_v3, m_v2, m_v4, m_v3); }
vec4 vec4::zyww() { return vec4(m_v3, m_v2, m_v4, m_v4); }
vec4 vec4::zzxx() { return vec4(m_v3, m_v3, m_v1, m_v1); }
vec4 vec4::zzxy() { return vec4(m_v3, m_v3, m_v1, m_v2); }
vec4 vec4::zzxz() { return vec4(m_v3, m_v3, m_v1, m_v3); }
vec4 vec4::zzxw() { return vec4(m_v3, m_v3, m_v1, m_v4); }
vec4 vec4::zzyx() { return vec4(m_v3, m_v3, m_v2, m_v1); }
vec4 vec4::zzyy() { return vec4(m_v3, m_v3, m_v2, m_v2); }
vec4 vec4::zzyz() { return vec4(m_v3, m_v3, m_v2, m_v3); }
vec4 vec4::zzyw() { return vec4(m_v3, m_v3, m_v2, m_v4); }
vec4 vec4::zzzx() { return vec4(m_v3, m_v3, m_v3, m_v1); }
vec4 vec4::zzzy() { return vec4(m_v3, m_v3, m_v3, m_v2); }
vec4 vec4::zzzz() { return vec4(m_v3, m_v3, m_v3, m_v3); }
vec4 vec4::zzzw() { return vec4(m_v3, m_v3, m_v3, m_v4); }
vec4 vec4::zzwx() { return vec4(m_v3, m_v3, m_v4, m_v1); }
vec4 vec4::zzwy() { return vec4(m_v3, m_v3, m_v4, m_v2); }
vec4 vec4::zzwz() { return vec4(m_v3, m_v3, m_v4, m_v3); }
vec4 vec4::zzww() { return vec4(m_v3, m_v3, m_v4, m_v4); }
vec4 vec4::zwxx() { return vec4(m_v3, m_v4, m_v1, m_v1); }
vec4 vec4::zwxy() { return vec4(m_v3, m_v4, m_v1, m_v2); }
vec4 vec4::zwxz() { return vec4(m_v3, m_v4, m_v1, m_v3); }
vec4 vec4::zwxw() { return vec4(m_v3, m_v4, m_v1, m_v4); }
vec4 vec4::zwyx() { return vec4(m_v3, m_v4, m_v2, m_v1); }
vec4 vec4::zwyy() { return vec4(m_v3, m_v4, m_v2, m_v2); }
vec4 vec4::zwyz() { return vec4(m_v3, m_v4, m_v2, m_v3); }
vec4 vec4::zwyw() { return vec4(m_v3, m_v4, m_v2, m_v4); }
vec4 vec4::zwzx() { return vec4(m_v3, m_v4, m_v3, m_v1); }
vec4 vec4::zwzy() { return vec4(m_v3, m_v4, m_v3, m_v2); }
vec4 vec4::zwzz() { return vec4(m_v3, m_v4, m_v3, m_v3); }
vec4 vec4::zwzw() { return vec4(m_v3, m_v4, m_v3, m_v4); }
vec4 vec4::zwwx() { return vec4(m_v3, m_v4, m_v4, m_v1); }
vec4 vec4::zwwy() { return vec4(m_v3, m_v4, m_v4, m_v2); }
vec4 vec4::zwwz() { return vec4(m_v3, m_v4, m_v4, m_v3); }
vec4 vec4::zwww() { return vec4(m_v3, m_v4, m_v4, m_v4); }
vec4 vec4::wxxx() { return vec4(m_v4, m_v1, m_v1, m_v1); }
vec4 vec4::wxxy() { return vec4(m_v4, m_v1, m_v1, m_v2); }
vec4 vec4::wxxz() { return vec4(m_v4, m_v1, m_v1, m_v3); }
vec4 vec4::wxxw() { return vec4(m_v4, m_v1, m_v1, m_v4); }
vec4 vec4::wxyx() { return vec4(m_v4, m_v1, m_v2, m_v1); }
vec4 vec4::wxyy() { return vec4(m_v4, m_v1, m_v2, m_v2); }
vec4 vec4::wxyz() { return vec4(m_v4, m_v1, m_v2, m_v3); }
vec4 vec4::wxyw() { return vec4(m_v4, m_v1, m_v2, m_v4); }
vec4 vec4::wxzx() { return vec4(m_v4, m_v1, m_v3, m_v1); }
vec4 vec4::wxzy() { return vec4(m_v4, m_v1, m_v3, m_v2); }
vec4 vec4::wxzz() { return vec4(m_v4, m_v1, m_v3, m_v3); }
vec4 vec4::wxzw() { return vec4(m_v4, m_v1, m_v3, m_v4); }
vec4 vec4::wxwx() { return vec4(m_v4, m_v1, m_v4, m_v1); }
vec4 vec4::wxwy() { return vec4(m_v4, m_v1, m_v4, m_v2); }
vec4 vec4::wxwz() { return vec4(m_v4, m_v1, m_v4, m_v3); }
vec4 vec4::wxww() { return vec4(m_v4, m_v1, m_v4, m_v4); }
vec4 vec4::wyxx() { return vec4(m_v4, m_v2, m_v1, m_v1); }
vec4 vec4::wyxy() { return vec4(m_v4, m_v2, m_v1, m_v2); }
vec4 vec4::wyxz() { return vec4(m_v4, m_v2, m_v1, m_v3); }
vec4 vec4::wyxw() { return vec4(m_v4, m_v2, m_v1, m_v4); }
vec4 vec4::wyyx() { return vec4(m_v4, m_v2, m_v2, m_v1); }
vec4 vec4::wyyy() { return vec4(m_v4, m_v2, m_v2, m_v2); }
vec4 vec4::wyyz() { return vec4(m_v4, m_v2, m_v2, m_v3); }
vec4 vec4::wyyw() { return vec4(m_v4, m_v2, m_v2, m_v4); }
vec4 vec4::wyzx() { return vec4(m_v4, m_v2, m_v3, m_v1); }
vec4 vec4::wyzy() { return vec4(m_v4, m_v2, m_v3, m_v2); }
vec4 vec4::wyzz() { return vec4(m_v4, m_v2, m_v3, m_v3); }
vec4 vec4::wyzw() { return vec4(m_v4, m_v2, m_v3, m_v4); }
vec4 vec4::wywx() { return vec4(m_v4, m_v2, m_v4, m_v1); }
vec4 vec4::wywy() { return vec4(m_v4, m_v2, m_v4, m_v2); }
vec4 vec4::wywz() { return vec4(m_v4, m_v2, m_v4, m_v3); }
vec4 vec4::wyww() { return vec4(m_v4, m_v2, m_v4, m_v4); }
vec4 vec4::wzxx() { return vec4(m_v4, m_v3, m_v1, m_v1); }
vec4 vec4::wzxy() { return vec4(m_v4, m_v3, m_v1, m_v2); }
vec4 vec4::wzxz() { return vec4(m_v4, m_v3, m_v1, m_v3); }
vec4 vec4::wzxw() { return vec4(m_v4, m_v3, m_v1, m_v4); }
vec4 vec4::wzyx() { return vec4(m_v4, m_v3, m_v2, m_v1); }
vec4 vec4::wzyy() { return vec4(m_v4, m_v3, m_v2, m_v2); }
vec4 vec4::wzyz() { return vec4(m_v4, m_v3, m_v2, m_v3); }
vec4 vec4::wzyw() { return vec4(m_v4, m_v3, m_v2, m_v4); }
vec4 vec4::wzzx() { return vec4(m_v4, m_v3, m_v3, m_v1); }
vec4 vec4::wzzy() { return vec4(m_v4, m_v3, m_v3, m_v2); }
vec4 vec4::wzzz() { return vec4(m_v4, m_v3, m_v3, m_v3); }
vec4 vec4::wzzw() { return vec4(m_v4, m_v3, m_v3, m_v4); }
vec4 vec4::wzwx() { return vec4(m_v4, m_v3, m_v4, m_v1); }
vec4 vec4::wzwy() { return vec4(m_v4, m_v3, m_v4, m_v2); }
vec4 vec4::wzwz() { return vec4(m_v4, m_v3, m_v4, m_v3); }
vec4 vec4::wzww() { return vec4(m_v4, m_v3, m_v4, m_v4); }
vec4 vec4::wwxx() { return vec4(m_v4, m_v4, m_v1, m_v1); }
vec4 vec4::wwxy() { return vec4(m_v4, m_v4, m_v1, m_v2); }
vec4 vec4::wwxz() { return vec4(m_v4, m_v4, m_v1, m_v3); }
vec4 vec4::wwxw() { return vec4(m_v4, m_v4, m_v1, m_v4); }
vec4 vec4::wwyx() { return vec4(m_v4, m_v4, m_v2, m_v1); }
vec4 vec4::wwyy() { return vec4(m_v4, m_v4, m_v2, m_v2); }
vec4 vec4::wwyz() { return vec4(m_v4, m_v4, m_v2, m_v3); }
vec4 vec4::wwyw() { return vec4(m_v4, m_v4, m_v2, m_v4); }
vec4 vec4::wwzx() { return vec4(m_v4, m_v4, m_v3, m_v1); }
vec4 vec4::wwzy() { return vec4(m_v4, m_v4, m_v3, m_v2); }
vec4 vec4::wwzz() { return vec4(m_v4, m_v4, m_v3, m_v3); }
vec4 vec4::wwzw() { return vec4(m_v4, m_v4, m_v3, m_v4); }
vec4 vec4::wwwx() { return vec4(m_v4, m_v4, m_v4, m_v1); }
vec4 vec4::wwwy() { return vec4(m_v4, m_v4, m_v4, m_v2); }
vec4 vec4::wwwz() { return vec4(m_v4, m_v4, m_v4, m_v3); }
vec4 vec4::wwww() { return vec4(m_v4, m_v4, m_v4, m_v4); }
vec4 vec4::rrrr() { return vec4(m_v1, m_v1, m_v1, m_v1); }
vec4 vec4::rrrg() { return vec4(m_v1, m_v1, m_v1, m_v2); }
vec4 vec4::rrrb() { return vec4(m_v1, m_v1, m_v1, m_v3); }
vec4 vec4::rrra() { return vec4(m_v1, m_v1, m_v1, m_v4); }
vec4 vec4::rrgr() { return vec4(m_v1, m_v1, m_v2, m_v1); }
vec4 vec4::rrgg() { return vec4(m_v1, m_v1, m_v2, m_v2); }
vec4 vec4::rrgb() { return vec4(m_v1, m_v1, m_v2, m_v3); }
vec4 vec4::rrga() { return vec4(m_v1, m_v1, m_v2, m_v4); }
vec4 vec4::rrbr() { return vec4(m_v1, m_v1, m_v3, m_v1); }
vec4 vec4::rrbg() { return vec4(m_v1, m_v1, m_v3, m_v2); }
vec4 vec4::rrbb() { return vec4(m_v1, m_v1, m_v3, m_v3); }
vec4 vec4::rrba() { return vec4(m_v1, m_v1, m_v3, m_v4); }
vec4 vec4::rrar() { return vec4(m_v1, m_v1, m_v4, m_v1); }
vec4 vec4::rrag() { return vec4(m_v1, m_v1, m_v4, m_v2); }
vec4 vec4::rrab() { return vec4(m_v1, m_v1, m_v4, m_v3); }
vec4 vec4::rraa() { return vec4(m_v1, m_v1, m_v4, m_v4); }
vec4 vec4::rgrr() { return vec4(m_v1, m_v2, m_v1, m_v1); }
vec4 vec4::rgrg() { return vec4(m_v1, m_v2, m_v1, m_v2); }
vec4 vec4::rgrb() { return vec4(m_v1, m_v2, m_v1, m_v3); }
vec4 vec4::rgra() { return vec4(m_v1, m_v2, m_v1, m_v4); }
vec4 vec4::rggr() { return vec4(m_v1, m_v2, m_v2, m_v1); }
vec4 vec4::rggg() { return vec4(m_v1, m_v2, m_v2, m_v2); }
vec4 vec4::rggb() { return vec4(m_v1, m_v2, m_v2, m_v3); }
vec4 vec4::rgga() { return vec4(m_v1, m_v2, m_v2, m_v4); }
vec4 vec4::rgbr() { return vec4(m_v1, m_v2, m_v3, m_v1); }
vec4 vec4::rgbg() { return vec4(m_v1, m_v2, m_v3, m_v2); }
vec4 vec4::rgbb() { return vec4(m_v1, m_v2, m_v3, m_v3); }
vec4 vec4::rgba() { return vec4(m_v1, m_v2, m_v3, m_v4); }
vec4 vec4::rgar() { return vec4(m_v1, m_v2, m_v4, m_v1); }
vec4 vec4::rgag() { return vec4(m_v1, m_v2, m_v4, m_v2); }
vec4 vec4::rgab() { return vec4(m_v1, m_v2, m_v4, m_v3); }
vec4 vec4::rgaa() { return vec4(m_v1, m_v2, m_v4, m_v4); }
vec4 vec4::rbrr() { return vec4(m_v1, m_v3, m_v1, m_v1); }
vec4 vec4::rbrg() { return vec4(m_v1, m_v3, m_v1, m_v2); }
vec4 vec4::rbrb() { return vec4(m_v1, m_v3, m_v1, m_v3); }
vec4 vec4::rbra() { return vec4(m_v1, m_v3, m_v1, m_v4); }
vec4 vec4::rbgr() { return vec4(m_v1, m_v3, m_v2, m_v1); }
vec4 vec4::rbgg() { return vec4(m_v1, m_v3, m_v2, m_v2); }
vec4 vec4::rbgb() { return vec4(m_v1, m_v3, m_v2, m_v3); }
vec4 vec4::rbga() { return vec4(m_v1, m_v3, m_v2, m_v4); }
vec4 vec4::rbbr() { return vec4(m_v1, m_v3, m_v3, m_v1); }
vec4 vec4::rbbg() { return vec4(m_v1, m_v3, m_v3, m_v2); }
vec4 vec4::rbbb() { return vec4(m_v1, m_v3, m_v3, m_v3); }
vec4 vec4::rbba() { return vec4(m_v1, m_v3, m_v3, m_v4); }
vec4 vec4::rbar() { return vec4(m_v1, m_v3, m_v4, m_v1); }
vec4 vec4::rbag() { return vec4(m_v1, m_v3, m_v4, m_v2); }
vec4 vec4::rbab() { return vec4(m_v1, m_v3, m_v4, m_v3); }
vec4 vec4::rbaa() { return vec4(m_v1, m_v3, m_v4, m_v4); }
vec4 vec4::rarr() { return vec4(m_v1, m_v4, m_v1, m_v1); }
vec4 vec4::rarg() { return vec4(m_v1, m_v4, m_v1, m_v2); }
vec4 vec4::rarb() { return vec4(m_v1, m_v4, m_v1, m_v3); }
vec4 vec4::rara() { return vec4(m_v1, m_v4, m_v1, m_v4); }
vec4 vec4::ragr() { return vec4(m_v1, m_v4, m_v2, m_v1); }
vec4 vec4::ragg() { return vec4(m_v1, m_v4, m_v2, m_v2); }
vec4 vec4::ragb() { return vec4(m_v1, m_v4, m_v2, m_v3); }
vec4 vec4::raga() { return vec4(m_v1, m_v4, m_v2, m_v4); }
vec4 vec4::rabr() { return vec4(m_v1, m_v4, m_v3, m_v1); }
vec4 vec4::rabg() { return vec4(m_v1, m_v4, m_v3, m_v2); }
vec4 vec4::rabb() { return vec4(m_v1, m_v4, m_v3, m_v3); }
vec4 vec4::raba() { return vec4(m_v1, m_v4, m_v3, m_v4); }
vec4 vec4::raar() { return vec4(m_v1, m_v4, m_v4, m_v1); }
vec4 vec4::raag() { return vec4(m_v1, m_v4, m_v4, m_v2); }
vec4 vec4::raab() { return vec4(m_v1, m_v4, m_v4, m_v3); }
vec4 vec4::raaa() { return vec4(m_v1, m_v4, m_v4, m_v4); }
vec4 vec4::grrr() { return vec4(m_v2, m_v1, m_v1, m_v1); }
vec4 vec4::grrg() { return vec4(m_v2, m_v1, m_v1, m_v2); }
vec4 vec4::grrb() { return vec4(m_v2, m_v1, m_v1, m_v3); }
vec4 vec4::grra() { return vec4(m_v2, m_v1, m_v1, m_v4); }
vec4 vec4::grgr() { return vec4(m_v2, m_v1, m_v2, m_v1); }
vec4 vec4::grgg() { return vec4(m_v2, m_v1, m_v2, m_v2); }
vec4 vec4::grgb() { return vec4(m_v2, m_v1, m_v2, m_v3); }
vec4 vec4::grga() { return vec4(m_v2, m_v1, m_v2, m_v4); }
vec4 vec4::grbr() { return vec4(m_v2, m_v1, m_v3, m_v1); }
vec4 vec4::grbg() { return vec4(m_v2, m_v1, m_v3, m_v2); }
vec4 vec4::grbb() { return vec4(m_v2, m_v1, m_v3, m_v3); }
vec4 vec4::grba() { return vec4(m_v2, m_v1, m_v3, m_v4); }
vec4 vec4::grar() { return vec4(m_v2, m_v1, m_v4, m_v1); }
vec4 vec4::grag() { return vec4(m_v2, m_v1, m_v4, m_v2); }
vec4 vec4::grab() { return vec4(m_v2, m_v1, m_v4, m_v3); }
vec4 vec4::graa() { return vec4(m_v2, m_v1, m_v4, m_v4); }
vec4 vec4::ggrr() { return vec4(m_v2, m_v2, m_v1, m_v1); }
vec4 vec4::ggrg() { return vec4(m_v2, m_v2, m_v1, m_v2); }
vec4 vec4::ggrb() { return vec4(m_v2, m_v2, m_v1, m_v3); }
vec4 vec4::ggra() { return vec4(m_v2, m_v2, m_v1, m_v4); }
vec4 vec4::gggr() { return vec4(m_v2, m_v2, m_v2, m_v1); }
vec4 vec4::gggg() { return vec4(m_v2, m_v2, m_v2, m_v2); }
vec4 vec4::gggb() { return vec4(m_v2, m_v2, m_v2, m_v3); }
vec4 vec4::ggga() { return vec4(m_v2, m_v2, m_v2, m_v4); }
vec4 vec4::ggbr() { return vec4(m_v2, m_v2, m_v3, m_v1); }
vec4 vec4::ggbg() { return vec4(m_v2, m_v2, m_v3, m_v2); }
vec4 vec4::ggbb() { return vec4(m_v2, m_v2, m_v3, m_v3); }
vec4 vec4::ggba() { return vec4(m_v2, m_v2, m_v3, m_v4); }
vec4 vec4::ggar() { return vec4(m_v2, m_v2, m_v4, m_v1); }
vec4 vec4::ggag() { return vec4(m_v2, m_v2, m_v4, m_v2); }
vec4 vec4::ggab() { return vec4(m_v2, m_v2, m_v4, m_v3); }
vec4 vec4::ggaa() { return vec4(m_v2, m_v2, m_v4, m_v4); }
vec4 vec4::gbrr() { return vec4(m_v2, m_v3, m_v1, m_v1); }
vec4 vec4::gbrg() { return vec4(m_v2, m_v3, m_v1, m_v2); }
vec4 vec4::gbrb() { return vec4(m_v2, m_v3, m_v1, m_v3); }
vec4 vec4::gbra() { return vec4(m_v2, m_v3, m_v1, m_v4); }
vec4 vec4::gbgr() { return vec4(m_v2, m_v3, m_v2, m_v1); }
vec4 vec4::gbgg() { return vec4(m_v2, m_v3, m_v2, m_v2); }
vec4 vec4::gbgb() { return vec4(m_v2, m_v3, m_v2, m_v3); }
vec4 vec4::gbga() { return vec4(m_v2, m_v3, m_v2, m_v4); }
vec4 vec4::gbbr() { return vec4(m_v2, m_v3, m_v3, m_v1); }
vec4 vec4::gbbg() { return vec4(m_v2, m_v3, m_v3, m_v2); }
vec4 vec4::gbbb() { return vec4(m_v2, m_v3, m_v3, m_v3); }
vec4 vec4::gbba() { return vec4(m_v2, m_v3, m_v3, m_v4); }
vec4 vec4::gbar() { return vec4(m_v2, m_v3, m_v4, m_v1); }
vec4 vec4::gbag() { return vec4(m_v2, m_v3, m_v4, m_v2); }
vec4 vec4::gbab() { return vec4(m_v2, m_v3, m_v4, m_v3); }
vec4 vec4::gbaa() { return vec4(m_v2, m_v3, m_v4, m_v4); }
vec4 vec4::garr() { return vec4(m_v2, m_v4, m_v1, m_v1); }
vec4 vec4::garg() { return vec4(m_v2, m_v4, m_v1, m_v2); }
vec4 vec4::garb() { return vec4(m_v2, m_v4, m_v1, m_v3); }
vec4 vec4::gara() { return vec4(m_v2, m_v4, m_v1, m_v4); }
vec4 vec4::gagr() { return vec4(m_v2, m_v4, m_v2, m_v1); }
vec4 vec4::gagg() { return vec4(m_v2, m_v4, m_v2, m_v2); }
vec4 vec4::gagb() { return vec4(m_v2, m_v4, m_v2, m_v3); }
vec4 vec4::gaga() { return vec4(m_v2, m_v4, m_v2, m_v4); }
vec4 vec4::gabr() { return vec4(m_v2, m_v4, m_v3, m_v1); }
vec4 vec4::gabg() { return vec4(m_v2, m_v4, m_v3, m_v2); }
vec4 vec4::gabb() { return vec4(m_v2, m_v4, m_v3, m_v3); }
vec4 vec4::gaba() { return vec4(m_v2, m_v4, m_v3, m_v4); }
vec4 vec4::gaar() { return vec4(m_v2, m_v4, m_v4, m_v1); }
vec4 vec4::gaag() { return vec4(m_v2, m_v4, m_v4, m_v2); }
vec4 vec4::gaab() { return vec4(m_v2, m_v4, m_v4, m_v3); }
vec4 vec4::gaaa() { return vec4(m_v2, m_v4, m_v4, m_v4); }
vec4 vec4::brrr() { return vec4(m_v3, m_v1, m_v1, m_v1); }
vec4 vec4::brrg() { return vec4(m_v3, m_v1, m_v1, m_v2); }
vec4 vec4::brrb() { return vec4(m_v3, m_v1, m_v1, m_v3); }
vec4 vec4::brra() { return vec4(m_v3, m_v1, m_v1, m_v4); }
vec4 vec4::brgr() { return vec4(m_v3, m_v1, m_v2, m_v1); }
vec4 vec4::brgg() { return vec4(m_v3, m_v1, m_v2, m_v2); }
vec4 vec4::brgb() { return vec4(m_v3, m_v1, m_v2, m_v3); }
vec4 vec4::brga() { return vec4(m_v3, m_v1, m_v2, m_v4); }
vec4 vec4::brbr() { return vec4(m_v3, m_v1, m_v3, m_v1); }
vec4 vec4::brbg() { return vec4(m_v3, m_v1, m_v3, m_v2); }
vec4 vec4::brbb() { return vec4(m_v3, m_v1, m_v3, m_v3); }
vec4 vec4::brba() { return vec4(m_v3, m_v1, m_v3, m_v4); }
vec4 vec4::brar() { return vec4(m_v3, m_v1, m_v4, m_v1); }
vec4 vec4::brag() { return vec4(m_v3, m_v1, m_v4, m_v2); }
vec4 vec4::brab() { return vec4(m_v3, m_v1, m_v4, m_v3); }
vec4 vec4::braa() { return vec4(m_v3, m_v1, m_v4, m_v4); }
vec4 vec4::bgrr() { return vec4(m_v3, m_v2, m_v1, m_v1); }
vec4 vec4::bgrg() { return vec4(m_v3, m_v2, m_v1, m_v2); }
vec4 vec4::bgrb() { return vec4(m_v3, m_v2, m_v1, m_v3); }
vec4 vec4::bgra() { return vec4(m_v3, m_v2, m_v1, m_v4); }
vec4 vec4::bggr() { return vec4(m_v3, m_v2, m_v2, m_v1); }
vec4 vec4::bggg() { return vec4(m_v3, m_v2, m_v2, m_v2); }
vec4 vec4::bggb() { return vec4(m_v3, m_v2, m_v2, m_v3); }
vec4 vec4::bgga() { return vec4(m_v3, m_v2, m_v2, m_v4); }
vec4 vec4::bgbr() { return vec4(m_v3, m_v2, m_v3, m_v1); }
vec4 vec4::bgbg() { return vec4(m_v3, m_v2, m_v3, m_v2); }
vec4 vec4::bgbb() { return vec4(m_v3, m_v2, m_v3, m_v3); }
vec4 vec4::bgba() { return vec4(m_v3, m_v2, m_v3, m_v4); }
vec4 vec4::bgar() { return vec4(m_v3, m_v2, m_v4, m_v1); }
vec4 vec4::bgag() { return vec4(m_v3, m_v2, m_v4, m_v2); }
vec4 vec4::bgab() { return vec4(m_v3, m_v2, m_v4, m_v3); }
vec4 vec4::bgaa() { return vec4(m_v3, m_v2, m_v4, m_v4); }
vec4 vec4::bbrr() { return vec4(m_v3, m_v3, m_v1, m_v1); }
vec4 vec4::bbrg() { return vec4(m_v3, m_v3, m_v1, m_v2); }
vec4 vec4::bbrb() { return vec4(m_v3, m_v3, m_v1, m_v3); }
vec4 vec4::bbra() { return vec4(m_v3, m_v3, m_v1, m_v4); }
vec4 vec4::bbgr() { return vec4(m_v3, m_v3, m_v2, m_v1); }
vec4 vec4::bbgg() { return vec4(m_v3, m_v3, m_v2, m_v2); }
vec4 vec4::bbgb() { return vec4(m_v3, m_v3, m_v2, m_v3); }
vec4 vec4::bbga() { return vec4(m_v3, m_v3, m_v2, m_v4); }
vec4 vec4::bbbr() { return vec4(m_v3, m_v3, m_v3, m_v1); }
vec4 vec4::bbbg() { return vec4(m_v3, m_v3, m_v3, m_v2); }
vec4 vec4::bbbb() { return vec4(m_v3, m_v3, m_v3, m_v3); }
vec4 vec4::bbba() { return vec4(m_v3, m_v3, m_v3, m_v4); }
vec4 vec4::bbar() { return vec4(m_v3, m_v3, m_v4, m_v1); }
vec4 vec4::bbag() { return vec4(m_v3, m_v3, m_v4, m_v2); }
vec4 vec4::bbab() { return vec4(m_v3, m_v3, m_v4, m_v3); }
vec4 vec4::bbaa() { return vec4(m_v3, m_v3, m_v4, m_v4); }
vec4 vec4::barr() { return vec4(m_v3, m_v4, m_v1, m_v1); }
vec4 vec4::barg() { return vec4(m_v3, m_v4, m_v1, m_v2); }
vec4 vec4::barb() { return vec4(m_v3, m_v4, m_v1, m_v3); }
vec4 vec4::bara() { return vec4(m_v3, m_v4, m_v1, m_v4); }
vec4 vec4::bagr() { return vec4(m_v3, m_v4, m_v2, m_v1); }
vec4 vec4::bagg() { return vec4(m_v3, m_v4, m_v2, m_v2); }
vec4 vec4::bagb() { return vec4(m_v3, m_v4, m_v2, m_v3); }
vec4 vec4::baga() { return vec4(m_v3, m_v4, m_v2, m_v4); }
vec4 vec4::babr() { return vec4(m_v3, m_v4, m_v3, m_v1); }
vec4 vec4::babg() { return vec4(m_v3, m_v4, m_v3, m_v2); }
vec4 vec4::babb() { return vec4(m_v3, m_v4, m_v3, m_v3); }
vec4 vec4::baba() { return vec4(m_v3, m_v4, m_v3, m_v4); }
vec4 vec4::baar() { return vec4(m_v3, m_v4, m_v4, m_v1); }
vec4 vec4::baag() { return vec4(m_v3, m_v4, m_v4, m_v2); }
vec4 vec4::baab() { return vec4(m_v3, m_v4, m_v4, m_v3); }
vec4 vec4::baaa() { return vec4(m_v3, m_v4, m_v4, m_v4); }
vec4 vec4::arrr() { return vec4(m_v4, m_v1, m_v1, m_v1); }
vec4 vec4::arrg() { return vec4(m_v4, m_v1, m_v1, m_v2); }
vec4 vec4::arrb() { return vec4(m_v4, m_v1, m_v1, m_v3); }
vec4 vec4::arra() { return vec4(m_v4, m_v1, m_v1, m_v4); }
vec4 vec4::argr() { return vec4(m_v4, m_v1, m_v2, m_v1); }
vec4 vec4::argg() { return vec4(m_v4, m_v1, m_v2, m_v2); }
vec4 vec4::argb() { return vec4(m_v4, m_v1, m_v2, m_v3); }
vec4 vec4::arga() { return vec4(m_v4, m_v1, m_v2, m_v4); }
vec4 vec4::arbr() { return vec4(m_v4, m_v1, m_v3, m_v1); }
vec4 vec4::arbg() { return vec4(m_v4, m_v1, m_v3, m_v2); }
vec4 vec4::arbb() { return vec4(m_v4, m_v1, m_v3, m_v3); }
vec4 vec4::arba() { return vec4(m_v4, m_v1, m_v3, m_v4); }
vec4 vec4::arar() { return vec4(m_v4, m_v1, m_v4, m_v1); }
vec4 vec4::arag() { return vec4(m_v4, m_v1, m_v4, m_v2); }
vec4 vec4::arab() { return vec4(m_v4, m_v1, m_v4, m_v3); }
vec4 vec4::araa() { return vec4(m_v4, m_v1, m_v4, m_v4); }
vec4 vec4::agrr() { return vec4(m_v4, m_v2, m_v1, m_v1); }
vec4 vec4::agrg() { return vec4(m_v4, m_v2, m_v1, m_v2); }
vec4 vec4::agrb() { return vec4(m_v4, m_v2, m_v1, m_v3); }
vec4 vec4::agra() { return vec4(m_v4, m_v2, m_v1, m_v4); }
vec4 vec4::aggr() { return vec4(m_v4, m_v2, m_v2, m_v1); }
vec4 vec4::aggg() { return vec4(m_v4, m_v2, m_v2, m_v2); }
vec4 vec4::aggb() { return vec4(m_v4, m_v2, m_v2, m_v3); }
vec4 vec4::agga() { return vec4(m_v4, m_v2, m_v2, m_v4); }
vec4 vec4::agbr() { return vec4(m_v4, m_v2, m_v3, m_v1); }
vec4 vec4::agbg() { return vec4(m_v4, m_v2, m_v3, m_v2); }
vec4 vec4::agbb() { return vec4(m_v4, m_v2, m_v3, m_v3); }
vec4 vec4::agba() { return vec4(m_v4, m_v2, m_v3, m_v4); }
vec4 vec4::agar() { return vec4(m_v4, m_v2, m_v4, m_v1); }
vec4 vec4::agag() { return vec4(m_v4, m_v2, m_v4, m_v2); }
vec4 vec4::agab() { return vec4(m_v4, m_v2, m_v4, m_v3); }
vec4 vec4::agaa() { return vec4(m_v4, m_v2, m_v4, m_v4); }
vec4 vec4::abrr() { return vec4(m_v4, m_v3, m_v1, m_v1); }
vec4 vec4::abrg() { return vec4(m_v4, m_v3, m_v1, m_v2); }
vec4 vec4::abrb() { return vec4(m_v4, m_v3, m_v1, m_v3); }
vec4 vec4::abra() { return vec4(m_v4, m_v3, m_v1, m_v4); }
vec4 vec4::abgr() { return vec4(m_v4, m_v3, m_v2, m_v1); }
vec4 vec4::abgg() { return vec4(m_v4, m_v3, m_v2, m_v2); }
vec4 vec4::abgb() { return vec4(m_v4, m_v3, m_v2, m_v3); }
vec4 vec4::abga() { return vec4(m_v4, m_v3, m_v2, m_v4); }
vec4 vec4::abbr() { return vec4(m_v4, m_v3, m_v3, m_v1); }
vec4 vec4::abbg() { return vec4(m_v4, m_v3, m_v3, m_v2); }
vec4 vec4::abbb() { return vec4(m_v4, m_v3, m_v3, m_v3); }
vec4 vec4::abba() { return vec4(m_v4, m_v3, m_v3, m_v4); }
vec4 vec4::abar() { return vec4(m_v4, m_v3, m_v4, m_v1); }
vec4 vec4::abag() { return vec4(m_v4, m_v3, m_v4, m_v2); }
vec4 vec4::abab() { return vec4(m_v4, m_v3, m_v4, m_v3); }
vec4 vec4::abaa() { return vec4(m_v4, m_v3, m_v4, m_v4); }
vec4 vec4::aarr() { return vec4(m_v4, m_v4, m_v1, m_v1); }
vec4 vec4::aarg() { return vec4(m_v4, m_v4, m_v1, m_v2); }
vec4 vec4::aarb() { return vec4(m_v4, m_v4, m_v1, m_v3); }
vec4 vec4::aara() { return vec4(m_v4, m_v4, m_v1, m_v4); }
vec4 vec4::aagr() { return vec4(m_v4, m_v4, m_v2, m_v1); }
vec4 vec4::aagg() { return vec4(m_v4, m_v4, m_v2, m_v2); }
vec4 vec4::aagb() { return vec4(m_v4, m_v4, m_v2, m_v3); }
vec4 vec4::aaga() { return vec4(m_v4, m_v4, m_v2, m_v4); }
vec4 vec4::aabr() { return vec4(m_v4, m_v4, m_v3, m_v1); }
vec4 vec4::aabg() { return vec4(m_v4, m_v4, m_v3, m_v2); }
vec4 vec4::aabb() { return vec4(m_v4, m_v4, m_v3, m_v3); }
vec4 vec4::aaba() { return vec4(m_v4, m_v4, m_v3, m_v4); }
vec4 vec4::aaar() { return vec4(m_v4, m_v4, m_v4, m_v1); }
vec4 vec4::aaag() { return vec4(m_v4, m_v4, m_v4, m_v2); }
vec4 vec4::aaab() { return vec4(m_v4, m_v4, m_v4, m_v3); }
vec4 vec4::aaaa() { return vec4(m_v4, m_v4, m_v4, m_v4); }
vec4 vec4::ssss() { return vec4(m_v1, m_v1, m_v1, m_v1); }
vec4 vec4::ssst() { return vec4(m_v1, m_v1, m_v1, m_v2); }
vec4 vec4::sssp() { return vec4(m_v1, m_v1, m_v1, m_v3); }
vec4 vec4::sssq() { return vec4(m_v1, m_v1, m_v1, m_v4); }
vec4 vec4::ssts() { return vec4(m_v1, m_v1, m_v2, m_v1); }
vec4 vec4::sstt() { return vec4(m_v1, m_v1, m_v2, m_v2); }
vec4 vec4::sstp() { return vec4(m_v1, m_v1, m_v2, m_v3); }
vec4 vec4::sstq() { return vec4(m_v1, m_v1, m_v2, m_v4); }
vec4 vec4::ssps() { return vec4(m_v1, m_v1, m_v3, m_v1); }
vec4 vec4::sspt() { return vec4(m_v1, m_v1, m_v3, m_v2); }
vec4 vec4::sspp() { return vec4(m_v1, m_v1, m_v3, m_v3); }
vec4 vec4::sspq() { return vec4(m_v1, m_v1, m_v3, m_v4); }
vec4 vec4::ssqs() { return vec4(m_v1, m_v1, m_v4, m_v1); }
vec4 vec4::ssqt() { return vec4(m_v1, m_v1, m_v4, m_v2); }
vec4 vec4::ssqp() { return vec4(m_v1, m_v1, m_v4, m_v3); }
vec4 vec4::ssqq() { return vec4(m_v1, m_v1, m_v4, m_v4); }
vec4 vec4::stss() { return vec4(m_v1, m_v2, m_v1, m_v1); }
vec4 vec4::stst() { return vec4(m_v1, m_v2, m_v1, m_v2); }
vec4 vec4::stsp() { return vec4(m_v1, m_v2, m_v1, m_v3); }
vec4 vec4::stsq() { return vec4(m_v1, m_v2, m_v1, m_v4); }
vec4 vec4::stts() { return vec4(m_v1, m_v2, m_v2, m_v1); }
vec4 vec4::sttt() { return vec4(m_v1, m_v2, m_v2, m_v2); }
vec4 vec4::sttp() { return vec4(m_v1, m_v2, m_v2, m_v3); }
vec4 vec4::sttq() { return vec4(m_v1, m_v2, m_v2, m_v4); }
vec4 vec4::stps() { return vec4(m_v1, m_v2, m_v3, m_v1); }
vec4 vec4::stpt() { return vec4(m_v1, m_v2, m_v3, m_v2); }
vec4 vec4::stpp() { return vec4(m_v1, m_v2, m_v3, m_v3); }
vec4 vec4::stpq() { return vec4(m_v1, m_v2, m_v3, m_v4); }
vec4 vec4::stqs() { return vec4(m_v1, m_v2, m_v4, m_v1); }
vec4 vec4::stqt() { return vec4(m_v1, m_v2, m_v4, m_v2); }
vec4 vec4::stqp() { return vec4(m_v1, m_v2, m_v4, m_v3); }
vec4 vec4::stqq() { return vec4(m_v1, m_v2, m_v4, m_v4); }
vec4 vec4::spss() { return vec4(m_v1, m_v3, m_v1, m_v1); }
vec4 vec4::spst() { return vec4(m_v1, m_v3, m_v1, m_v2); }
vec4 vec4::spsp() { return vec4(m_v1, m_v3, m_v1, m_v3); }
vec4 vec4::spsq() { return vec4(m_v1, m_v3, m_v1, m_v4); }
vec4 vec4::spts() { return vec4(m_v1, m_v3, m_v2, m_v1); }
vec4 vec4::sptt() { return vec4(m_v1, m_v3, m_v2, m_v2); }
vec4 vec4::sptp() { return vec4(m_v1, m_v3, m_v2, m_v3); }
vec4 vec4::sptq() { return vec4(m_v1, m_v3, m_v2, m_v4); }
vec4 vec4::spps() { return vec4(m_v1, m_v3, m_v3, m_v1); }
vec4 vec4::sppt() { return vec4(m_v1, m_v3, m_v3, m_v2); }
vec4 vec4::sppp() { return vec4(m_v1, m_v3, m_v3, m_v3); }
vec4 vec4::sppq() { return vec4(m_v1, m_v3, m_v3, m_v4); }
vec4 vec4::spqs() { return vec4(m_v1, m_v3, m_v4, m_v1); }
vec4 vec4::spqt() { return vec4(m_v1, m_v3, m_v4, m_v2); }
vec4 vec4::spqp() { return vec4(m_v1, m_v3, m_v4, m_v3); }
vec4 vec4::spqq() { return vec4(m_v1, m_v3, m_v4, m_v4); }
vec4 vec4::sqss() { return vec4(m_v1, m_v4, m_v1, m_v1); }
vec4 vec4::sqst() { return vec4(m_v1, m_v4, m_v1, m_v2); }
vec4 vec4::sqsp() { return vec4(m_v1, m_v4, m_v1, m_v3); }
vec4 vec4::sqsq() { return vec4(m_v1, m_v4, m_v1, m_v4); }
vec4 vec4::sqts() { return vec4(m_v1, m_v4, m_v2, m_v1); }
vec4 vec4::sqtt() { return vec4(m_v1, m_v4, m_v2, m_v2); }
vec4 vec4::sqtp() { return vec4(m_v1, m_v4, m_v2, m_v3); }
vec4 vec4::sqtq() { return vec4(m_v1, m_v4, m_v2, m_v4); }
vec4 vec4::sqps() { return vec4(m_v1, m_v4, m_v3, m_v1); }
vec4 vec4::sqpt() { return vec4(m_v1, m_v4, m_v3, m_v2); }
vec4 vec4::sqpp() { return vec4(m_v1, m_v4, m_v3, m_v3); }
vec4 vec4::sqpq() { return vec4(m_v1, m_v4, m_v3, m_v4); }
vec4 vec4::sqqs() { return vec4(m_v1, m_v4, m_v4, m_v1); }
vec4 vec4::sqqt() { return vec4(m_v1, m_v4, m_v4, m_v2); }
vec4 vec4::sqqp() { return vec4(m_v1, m_v4, m_v4, m_v3); }
vec4 vec4::sqqq() { return vec4(m_v1, m_v4, m_v4, m_v4); }
vec4 vec4::tsss() { return vec4(m_v2, m_v1, m_v1, m_v1); }
vec4 vec4::tsst() { return vec4(m_v2, m_v1, m_v1, m_v2); }
vec4 vec4::tssp() { return vec4(m_v2, m_v1, m_v1, m_v3); }
vec4 vec4::tssq() { return vec4(m_v2, m_v1, m_v1, m_v4); }
vec4 vec4::tsts() { return vec4(m_v2, m_v1, m_v2, m_v1); }
vec4 vec4::tstt() { return vec4(m_v2, m_v1, m_v2, m_v2); }
vec4 vec4::tstp() { return vec4(m_v2, m_v1, m_v2, m_v3); }
vec4 vec4::tstq() { return vec4(m_v2, m_v1, m_v2, m_v4); }
vec4 vec4::tsps() { return vec4(m_v2, m_v1, m_v3, m_v1); }
vec4 vec4::tspt() { return vec4(m_v2, m_v1, m_v3, m_v2); }
vec4 vec4::tspp() { return vec4(m_v2, m_v1, m_v3, m_v3); }
vec4 vec4::tspq() { return vec4(m_v2, m_v1, m_v3, m_v4); }
vec4 vec4::tsqs() { return vec4(m_v2, m_v1, m_v4, m_v1); }
vec4 vec4::tsqt() { return vec4(m_v2, m_v1, m_v4, m_v2); }
vec4 vec4::tsqp() { return vec4(m_v2, m_v1, m_v4, m_v3); }
vec4 vec4::tsqq() { return vec4(m_v2, m_v1, m_v4, m_v4); }
vec4 vec4::ttss() { return vec4(m_v2, m_v2, m_v1, m_v1); }
vec4 vec4::ttst() { return vec4(m_v2, m_v2, m_v1, m_v2); }
vec4 vec4::ttsp() { return vec4(m_v2, m_v2, m_v1, m_v3); }
vec4 vec4::ttsq() { return vec4(m_v2, m_v2, m_v1, m_v4); }
vec4 vec4::ttts() { return vec4(m_v2, m_v2, m_v2, m_v1); }
vec4 vec4::tttt() { return vec4(m_v2, m_v2, m_v2, m_v2); }
vec4 vec4::tttp() { return vec4(m_v2, m_v2, m_v2, m_v3); }
vec4 vec4::tttq() { return vec4(m_v2, m_v2, m_v2, m_v4); }
vec4 vec4::ttps() { return vec4(m_v2, m_v2, m_v3, m_v1); }
vec4 vec4::ttpt() { return vec4(m_v2, m_v2, m_v3, m_v2); }
vec4 vec4::ttpp() { return vec4(m_v2, m_v2, m_v3, m_v3); }
vec4 vec4::ttpq() { return vec4(m_v2, m_v2, m_v3, m_v4); }
vec4 vec4::ttqs() { return vec4(m_v2, m_v2, m_v4, m_v1); }
vec4 vec4::ttqt() { return vec4(m_v2, m_v2, m_v4, m_v2); }
vec4 vec4::ttqp() { return vec4(m_v2, m_v2, m_v4, m_v3); }
vec4 vec4::ttqq() { return vec4(m_v2, m_v2, m_v4, m_v4); }
vec4 vec4::tpss() { return vec4(m_v2, m_v3, m_v1, m_v1); }
vec4 vec4::tpst() { return vec4(m_v2, m_v3, m_v1, m_v2); }
vec4 vec4::tpsp() { return vec4(m_v2, m_v3, m_v1, m_v3); }
vec4 vec4::tpsq() { return vec4(m_v2, m_v3, m_v1, m_v4); }
vec4 vec4::tpts() { return vec4(m_v2, m_v3, m_v2, m_v1); }
vec4 vec4::tptt() { return vec4(m_v2, m_v3, m_v2, m_v2); }
vec4 vec4::tptp() { return vec4(m_v2, m_v3, m_v2, m_v3); }
vec4 vec4::tptq() { return vec4(m_v2, m_v3, m_v2, m_v4); }
vec4 vec4::tpps() { return vec4(m_v2, m_v3, m_v3, m_v1); }
vec4 vec4::tppt() { return vec4(m_v2, m_v3, m_v3, m_v2); }
vec4 vec4::tppp() { return vec4(m_v2, m_v3, m_v3, m_v3); }
vec4 vec4::tppq() { return vec4(m_v2, m_v3, m_v3, m_v4); }
vec4 vec4::tpqs() { return vec4(m_v2, m_v3, m_v4, m_v1); }
vec4 vec4::tpqt() { return vec4(m_v2, m_v3, m_v4, m_v2); }
vec4 vec4::tpqp() { return vec4(m_v2, m_v3, m_v4, m_v3); }
vec4 vec4::tpqq() { return vec4(m_v2, m_v3, m_v4, m_v4); }
vec4 vec4::tqss() { return vec4(m_v2, m_v4, m_v1, m_v1); }
vec4 vec4::tqst() { return vec4(m_v2, m_v4, m_v1, m_v2); }
vec4 vec4::tqsp() { return vec4(m_v2, m_v4, m_v1, m_v3); }
vec4 vec4::tqsq() { return vec4(m_v2, m_v4, m_v1, m_v4); }
vec4 vec4::tqts() { return vec4(m_v2, m_v4, m_v2, m_v1); }
vec4 vec4::tqtt() { return vec4(m_v2, m_v4, m_v2, m_v2); }
vec4 vec4::tqtp() { return vec4(m_v2, m_v4, m_v2, m_v3); }
vec4 vec4::tqtq() { return vec4(m_v2, m_v4, m_v2, m_v4); }
vec4 vec4::tqps() { return vec4(m_v2, m_v4, m_v3, m_v1); }
vec4 vec4::tqpt() { return vec4(m_v2, m_v4, m_v3, m_v2); }
vec4 vec4::tqpp() { return vec4(m_v2, m_v4, m_v3, m_v3); }
vec4 vec4::tqpq() { return vec4(m_v2, m_v4, m_v3, m_v4); }
vec4 vec4::tqqs() { return vec4(m_v2, m_v4, m_v4, m_v1); }
vec4 vec4::tqqt() { return vec4(m_v2, m_v4, m_v4, m_v2); }
vec4 vec4::tqqp() { return vec4(m_v2, m_v4, m_v4, m_v3); }
vec4 vec4::tqqq() { return vec4(m_v2, m_v4, m_v4, m_v4); }
vec4 vec4::psss() { return vec4(m_v3, m_v1, m_v1, m_v1); }
vec4 vec4::psst() { return vec4(m_v3, m_v1, m_v1, m_v2); }
vec4 vec4::pssp() { return vec4(m_v3, m_v1, m_v1, m_v3); }
vec4 vec4::pssq() { return vec4(m_v3, m_v1, m_v1, m_v4); }
vec4 vec4::psts() { return vec4(m_v3, m_v1, m_v2, m_v1); }
vec4 vec4::pstt() { return vec4(m_v3, m_v1, m_v2, m_v2); }
vec4 vec4::pstp() { return vec4(m_v3, m_v1, m_v2, m_v3); }
vec4 vec4::pstq() { return vec4(m_v3, m_v1, m_v2, m_v4); }
vec4 vec4::psps() { return vec4(m_v3, m_v1, m_v3, m_v1); }
vec4 vec4::pspt() { return vec4(m_v3, m_v1, m_v3, m_v2); }
vec4 vec4::pspp() { return vec4(m_v3, m_v1, m_v3, m_v3); }
vec4 vec4::pspq() { return vec4(m_v3, m_v1, m_v3, m_v4); }
vec4 vec4::psqs() { return vec4(m_v3, m_v1, m_v4, m_v1); }
vec4 vec4::psqt() { return vec4(m_v3, m_v1, m_v4, m_v2); }
vec4 vec4::psqp() { return vec4(m_v3, m_v1, m_v4, m_v3); }
vec4 vec4::psqq() { return vec4(m_v3, m_v1, m_v4, m_v4); }
vec4 vec4::ptss() { return vec4(m_v3, m_v2, m_v1, m_v1); }
vec4 vec4::ptst() { return vec4(m_v3, m_v2, m_v1, m_v2); }
vec4 vec4::ptsp() { return vec4(m_v3, m_v2, m_v1, m_v3); }
vec4 vec4::ptsq() { return vec4(m_v3, m_v2, m_v1, m_v4); }
vec4 vec4::ptts() { return vec4(m_v3, m_v2, m_v2, m_v1); }
vec4 vec4::pttt() { return vec4(m_v3, m_v2, m_v2, m_v2); }
vec4 vec4::pttp() { return vec4(m_v3, m_v2, m_v2, m_v3); }
vec4 vec4::pttq() { return vec4(m_v3, m_v2, m_v2, m_v4); }
vec4 vec4::ptps() { return vec4(m_v3, m_v2, m_v3, m_v1); }
vec4 vec4::ptpt() { return vec4(m_v3, m_v2, m_v3, m_v2); }
vec4 vec4::ptpp() { return vec4(m_v3, m_v2, m_v3, m_v3); }
vec4 vec4::ptpq() { return vec4(m_v3, m_v2, m_v3, m_v4); }
vec4 vec4::ptqs() { return vec4(m_v3, m_v2, m_v4, m_v1); }
vec4 vec4::ptqt() { return vec4(m_v3, m_v2, m_v4, m_v2); }
vec4 vec4::ptqp() { return vec4(m_v3, m_v2, m_v4, m_v3); }
vec4 vec4::ptqq() { return vec4(m_v3, m_v2, m_v4, m_v4); }
vec4 vec4::ppss() { return vec4(m_v3, m_v3, m_v1, m_v1); }
vec4 vec4::ppst() { return vec4(m_v3, m_v3, m_v1, m_v2); }
vec4 vec4::ppsp() { return vec4(m_v3, m_v3, m_v1, m_v3); }
vec4 vec4::ppsq() { return vec4(m_v3, m_v3, m_v1, m_v4); }
vec4 vec4::ppts() { return vec4(m_v3, m_v3, m_v2, m_v1); }
vec4 vec4::pptt() { return vec4(m_v3, m_v3, m_v2, m_v2); }
vec4 vec4::pptp() { return vec4(m_v3, m_v3, m_v2, m_v3); }
vec4 vec4::pptq() { return vec4(m_v3, m_v3, m_v2, m_v4); }
vec4 vec4::ppps() { return vec4(m_v3, m_v3, m_v3, m_v1); }
vec4 vec4::pppt() { return vec4(m_v3, m_v3, m_v3, m_v2); }
vec4 vec4::pppp() { return vec4(m_v3, m_v3, m_v3, m_v3); }
vec4 vec4::pppq() { return vec4(m_v3, m_v3, m_v3, m_v4); }
vec4 vec4::ppqs() { return vec4(m_v3, m_v3, m_v4, m_v1); }
vec4 vec4::ppqt() { return vec4(m_v3, m_v3, m_v4, m_v2); }
vec4 vec4::ppqp() { return vec4(m_v3, m_v3, m_v4, m_v3); }
vec4 vec4::ppqq() { return vec4(m_v3, m_v3, m_v4, m_v4); }
vec4 vec4::pqss() { return vec4(m_v3, m_v4, m_v1, m_v1); }
vec4 vec4::pqst() { return vec4(m_v3, m_v4, m_v1, m_v2); }
vec4 vec4::pqsp() { return vec4(m_v3, m_v4, m_v1, m_v3); }
vec4 vec4::pqsq() { return vec4(m_v3, m_v4, m_v1, m_v4); }
vec4 vec4::pqts() { return vec4(m_v3, m_v4, m_v2, m_v1); }
vec4 vec4::pqtt() { return vec4(m_v3, m_v4, m_v2, m_v2); }
vec4 vec4::pqtp() { return vec4(m_v3, m_v4, m_v2, m_v3); }
vec4 vec4::pqtq() { return vec4(m_v3, m_v4, m_v2, m_v4); }
vec4 vec4::pqps() { return vec4(m_v3, m_v4, m_v3, m_v1); }
vec4 vec4::pqpt() { return vec4(m_v3, m_v4, m_v3, m_v2); }
vec4 vec4::pqpp() { return vec4(m_v3, m_v4, m_v3, m_v3); }
vec4 vec4::pqpq() { return vec4(m_v3, m_v4, m_v3, m_v4); }
vec4 vec4::pqqs() { return vec4(m_v3, m_v4, m_v4, m_v1); }
vec4 vec4::pqqt() { return vec4(m_v3, m_v4, m_v4, m_v2); }
vec4 vec4::pqqp() { return vec4(m_v3, m_v4, m_v4, m_v3); }
vec4 vec4::pqqq() { return vec4(m_v3, m_v4, m_v4, m_v4); }
vec4 vec4::qsss() { return vec4(m_v4, m_v1, m_v1, m_v1); }
vec4 vec4::qsst() { return vec4(m_v4, m_v1, m_v1, m_v2); }
vec4 vec4::qssp() { return vec4(m_v4, m_v1, m_v1, m_v3); }
vec4 vec4::qssq() { return vec4(m_v4, m_v1, m_v1, m_v4); }
vec4 vec4::qsts() { return vec4(m_v4, m_v1, m_v2, m_v1); }
vec4 vec4::qstt() { return vec4(m_v4, m_v1, m_v2, m_v2); }
vec4 vec4::qstp() { return vec4(m_v4, m_v1, m_v2, m_v3); }
vec4 vec4::qstq() { return vec4(m_v4, m_v1, m_v2, m_v4); }
vec4 vec4::qsps() { return vec4(m_v4, m_v1, m_v3, m_v1); }
vec4 vec4::qspt() { return vec4(m_v4, m_v1, m_v3, m_v2); }
vec4 vec4::qspp() { return vec4(m_v4, m_v1, m_v3, m_v3); }
vec4 vec4::qspq() { return vec4(m_v4, m_v1, m_v3, m_v4); }
vec4 vec4::qsqs() { return vec4(m_v4, m_v1, m_v4, m_v1); }
vec4 vec4::qsqt() { return vec4(m_v4, m_v1, m_v4, m_v2); }
vec4 vec4::qsqp() { return vec4(m_v4, m_v1, m_v4, m_v3); }
vec4 vec4::qsqq() { return vec4(m_v4, m_v1, m_v4, m_v4); }
vec4 vec4::qtss() { return vec4(m_v4, m_v2, m_v1, m_v1); }
vec4 vec4::qtst() { return vec4(m_v4, m_v2, m_v1, m_v2); }
vec4 vec4::qtsp() { return vec4(m_v4, m_v2, m_v1, m_v3); }
vec4 vec4::qtsq() { return vec4(m_v4, m_v2, m_v1, m_v4); }
vec4 vec4::qtts() { return vec4(m_v4, m_v2, m_v2, m_v1); }
vec4 vec4::qttt() { return vec4(m_v4, m_v2, m_v2, m_v2); }
vec4 vec4::qttp() { return vec4(m_v4, m_v2, m_v2, m_v3); }
vec4 vec4::qttq() { return vec4(m_v4, m_v2, m_v2, m_v4); }
vec4 vec4::qtps() { return vec4(m_v4, m_v2, m_v3, m_v1); }
vec4 vec4::qtpt() { return vec4(m_v4, m_v2, m_v3, m_v2); }
vec4 vec4::qtpp() { return vec4(m_v4, m_v2, m_v3, m_v3); }
vec4 vec4::qtpq() { return vec4(m_v4, m_v2, m_v3, m_v4); }
vec4 vec4::qtqs() { return vec4(m_v4, m_v2, m_v4, m_v1); }
vec4 vec4::qtqt() { return vec4(m_v4, m_v2, m_v4, m_v2); }
vec4 vec4::qtqp() { return vec4(m_v4, m_v2, m_v4, m_v3); }
vec4 vec4::qtqq() { return vec4(m_v4, m_v2, m_v4, m_v4); }
vec4 vec4::qpss() { return vec4(m_v4, m_v3, m_v1, m_v1); }
vec4 vec4::qpst() { return vec4(m_v4, m_v3, m_v1, m_v2); }
vec4 vec4::qpsp() { return vec4(m_v4, m_v3, m_v1, m_v3); }
vec4 vec4::qpsq() { return vec4(m_v4, m_v3, m_v1, m_v4); }
vec4 vec4::qpts() { return vec4(m_v4, m_v3, m_v2, m_v1); }
vec4 vec4::qptt() { return vec4(m_v4, m_v3, m_v2, m_v2); }
vec4 vec4::qptp() { return vec4(m_v4, m_v3, m_v2, m_v3); }
vec4 vec4::qptq() { return vec4(m_v4, m_v3, m_v2, m_v4); }
vec4 vec4::qpps() { return vec4(m_v4, m_v3, m_v3, m_v1); }
vec4 vec4::qppt() { return vec4(m_v4, m_v3, m_v3, m_v2); }
vec4 vec4::qppp() { return vec4(m_v4, m_v3, m_v3, m_v3); }
vec4 vec4::qppq() { return vec4(m_v4, m_v3, m_v3, m_v4); }
vec4 vec4::qpqs() { return vec4(m_v4, m_v3, m_v4, m_v1); }
vec4 vec4::qpqt() { return vec4(m_v4, m_v3, m_v4, m_v2); }
vec4 vec4::qpqp() { return vec4(m_v4, m_v3, m_v4, m_v3); }
vec4 vec4::qpqq() { return vec4(m_v4, m_v3, m_v4, m_v4); }
vec4 vec4::qqss() { return vec4(m_v4, m_v4, m_v1, m_v1); }
vec4 vec4::qqst() { return vec4(m_v4, m_v4, m_v1, m_v2); }
vec4 vec4::qqsp() { return vec4(m_v4, m_v4, m_v1, m_v3); }
vec4 vec4::qqsq() { return vec4(m_v4, m_v4, m_v1, m_v4); }
vec4 vec4::qqts() { return vec4(m_v4, m_v4, m_v2, m_v1); }
vec4 vec4::qqtt() { return vec4(m_v4, m_v4, m_v2, m_v2); }
vec4 vec4::qqtp() { return vec4(m_v4, m_v4, m_v2, m_v3); }
vec4 vec4::qqtq() { return vec4(m_v4, m_v4, m_v2, m_v4); }
vec4 vec4::qqps() { return vec4(m_v4, m_v4, m_v3, m_v1); }
vec4 vec4::qqpt() { return vec4(m_v4, m_v4, m_v3, m_v2); }
vec4 vec4::qqpp() { return vec4(m_v4, m_v4, m_v3, m_v3); }
vec4 vec4::qqpq() { return vec4(m_v4, m_v4, m_v3, m_v4); }
vec4 vec4::qqqs() { return vec4(m_v4, m_v4, m_v4, m_v1); }
vec4 vec4::qqqt() { return vec4(m_v4, m_v4, m_v4, m_v2); }
vec4 vec4::qqqp() { return vec4(m_v4, m_v4, m_v4, m_v3); }
vec4 vec4::qqqq() { return vec4(m_v4, m_v4, m_v4, m_v4); }

// ptr access
float* vec4::pointer()
{
    if(!m_vecPtr) m_vecPtr = new float[4];
    m_vecPtr[0] = m_v1;
    m_vecPtr[1] = m_v2;
    m_vecPtr[2] = m_v3;
    m_vecPtr[3] = m_v4;
    return m_vecPtr;
}

// math and whatnot
vec4 vec4::operator+(const vec4& rhs) const
{
	vec4 v;
	v.x() = m_v1 + rhs.x();
	v.y() = m_v2 + rhs.y();
	v.z() = m_v3 + rhs.z();
	v.w() = m_v4 + rhs.w();
	return v;
}

vec4 vec4::operator-(const vec4& rhs) const
{
	vec4 v;
	v.x() = m_v1 - rhs.x();
	v.y() = m_v2 - rhs.y();
	v.z() = m_v3 - rhs.z();
	v.w() = m_v4 - rhs.w();
	return v;
}

vec4 vec4::operator*(const vec4& rhs) const
{
    vec4 v;
    v.x() = m_v1 * rhs.x();
    v.y() = m_v2 * rhs.y();
    v.z() = m_v3 * rhs.z();
    v.w() = m_v4 * rhs.w();
    return v;
}

vec4 vec4::operator/(const vec4& rhs) const
{
    vec4 v;
    v.x() = m_v1 / rhs.x();
    v.y() = m_v2 / rhs.y();
    v.z() = m_v3 / rhs.z();
    v.w() = m_v4 / rhs.w();
    return v;
}

float vec4::dot(const vec4& rhs) const
{
	return (m_v1*rhs.x()) + (m_v2*rhs.y()) + (m_v3*rhs.z()) + (m_v4*rhs.w());
}

float vec4::length()
{
    return sqrt((m_v1*m_v1) + (m_v2*m_v2) + (m_v3*m_v3) + (m_v4*m_v4));
}

float vec4::length2()
{
    return (m_v1*m_v1) + (m_v2*m_v2) + (m_v3*m_v3) + (m_v4*m_v4);
}

bool vec4::operator==(const vec4& rhs) const
{
	return (m_v1 == rhs.x()) && (m_v2 == rhs.y()) && (m_v3 == rhs.z()) && (m_v4 == rhs.w());
}


//---------------------------------
//          vec3 data access
//---------------------------------

vec3::vec3() { m_v1 = 0; m_v2 = 0; m_v3 = 0; m_vecPtr = NULL;  }
vec3::vec3(float value) { m_v1 = value; m_v2 = value; m_v3 = value; m_vecPtr = NULL;  }
vec3::vec3(float val1, float val2, float val3) { m_v1 = val1; m_v2 = val2; m_v3 = val3; m_vecPtr = NULL;  }
vec3::vec3(float val1, vec2 val2) { m_v1 = val1; m_v2 = val2.x(); m_v3 = val2.y(); m_vecPtr = NULL;  }
vec3::vec3(vec2 val1, float val2) { m_v1 = val1.x(); m_v2 = val1.y(); m_v3 = val2; m_vecPtr = NULL;  }

// dtor
vec3::~vec3() { if(m_vecPtr) delete m_vecPtr; }

// scalar returns
float& vec3::x() { return m_v1; }
const float& vec3::x() const { return m_v1; }
float& vec3::y() { return m_v2; }
const float& vec3::y() const { return m_v2; }
float& vec3::z() { return m_v3; }
const float& vec3::z() const { return m_v3; }
float& vec3::r() { return m_v1; }
const float& vec3::r() const { return m_v1; }
float& vec3::g() { return m_v2; }
const float& vec3::g() const { return m_v2; }
float& vec3::b() { return m_v3; }
const float& vec3::b() const { return m_v3; }
float& vec3::s() { return m_v1; }
const float& vec3::s() const { return m_v1; }
float& vec3::t() { return m_v2; }
const float& vec3::t() const { return m_v2; }
float& vec3::p() { return m_v3; }
const float& vec3::p() const { return m_v3; }

// vec2 returns
vec2 vec3::xx() { return vec2(m_v1, m_v1); }
vec2 vec3::xy() { return vec2(m_v1, m_v2); }
vec2 vec3::xz() { return vec2(m_v1, m_v3); }
vec2 vec3::yx() { return vec2(m_v2, m_v1); }
vec2 vec3::yy() { return vec2(m_v2, m_v2); }
vec2 vec3::yz() { return vec2(m_v2, m_v3); }
vec2 vec3::zx() { return vec2(m_v3, m_v1); }
vec2 vec3::zy() { return vec2(m_v3, m_v2); }
vec2 vec3::zz() { return vec2(m_v3, m_v3); }
vec2 vec3::rr() { return vec2(m_v1, m_v1); }
vec2 vec3::rg() { return vec2(m_v1, m_v2); }
vec2 vec3::rb() { return vec2(m_v1, m_v3); }
vec2 vec3::gr() { return vec2(m_v2, m_v1); }
vec2 vec3::gg() { return vec2(m_v2, m_v2); }
vec2 vec3::gb() { return vec2(m_v2, m_v3); }
vec2 vec3::br() { return vec2(m_v3, m_v1); }
vec2 vec3::bg() { return vec2(m_v3, m_v2); }
vec2 vec3::bb() { return vec2(m_v3, m_v3); }
vec2 vec3::ss() { return vec2(m_v1, m_v1); }
vec2 vec3::st() { return vec2(m_v1, m_v2); }
vec2 vec3::sp() { return vec2(m_v1, m_v3); }
vec2 vec3::ts() { return vec2(m_v2, m_v1); }
vec2 vec3::tt() { return vec2(m_v2, m_v2); }
vec2 vec3::tp() { return vec2(m_v2, m_v3); }
vec2 vec3::ps() { return vec2(m_v3, m_v1); }
vec2 vec3::pt() { return vec2(m_v3, m_v2); }
vec2 vec3::pp() { return vec2(m_v3, m_v3); }

// vec3 returns
vec3 vec3::xxx() { return vec3(m_v1, m_v1, m_v1); }
vec3 vec3::xxy() { return vec3(m_v1, m_v1, m_v2); }
vec3 vec3::xxz() { return vec3(m_v1, m_v1, m_v3); }
vec3 vec3::xyx() { return vec3(m_v1, m_v2, m_v1); }
vec3 vec3::xyy() { return vec3(m_v1, m_v2, m_v2); }
vec3 vec3::xyz() { return vec3(m_v1, m_v2, m_v3); }
vec3 vec3::xzx() { return vec3(m_v1, m_v3, m_v1); }
vec3 vec3::xzy() { return vec3(m_v1, m_v3, m_v2); }
vec3 vec3::xzz() { return vec3(m_v1, m_v3, m_v3); }
vec3 vec3::yxx() { return vec3(m_v2, m_v1, m_v1); }
vec3 vec3::yxy() { return vec3(m_v2, m_v1, m_v2); }
vec3 vec3::yxz() { return vec3(m_v2, m_v1, m_v3); }
vec3 vec3::yyx() { return vec3(m_v2, m_v2, m_v1); }
vec3 vec3::yyy() { return vec3(m_v2, m_v2, m_v2); }
vec3 vec3::yyz() { return vec3(m_v2, m_v2, m_v3); }
vec3 vec3::yzx() { return vec3(m_v2, m_v3, m_v1); }
vec3 vec3::yzy() { return vec3(m_v2, m_v3, m_v2); }
vec3 vec3::yzz() { return vec3(m_v2, m_v3, m_v3); }
vec3 vec3::zxx() { return vec3(m_v3, m_v1, m_v1); }
vec3 vec3::zxy() { return vec3(m_v3, m_v1, m_v2); }
vec3 vec3::zxz() { return vec3(m_v3, m_v1, m_v3); }
vec3 vec3::zyx() { return vec3(m_v3, m_v2, m_v1); }
vec3 vec3::zyy() { return vec3(m_v3, m_v2, m_v2); }
vec3 vec3::zyz() { return vec3(m_v3, m_v2, m_v3); }
vec3 vec3::zzx() { return vec3(m_v3, m_v3, m_v1); }
vec3 vec3::zzy() { return vec3(m_v3, m_v3, m_v2); }
vec3 vec3::zzz() { return vec3(m_v3, m_v3, m_v3); }
vec3 vec3::rrr() { return vec3(m_v1, m_v1, m_v1); }
vec3 vec3::rrg() { return vec3(m_v1, m_v1, m_v2); }
vec3 vec3::rrb() { return vec3(m_v1, m_v1, m_v3); }
vec3 vec3::rgr() { return vec3(m_v1, m_v2, m_v1); }
vec3 vec3::rgg() { return vec3(m_v1, m_v2, m_v2); }
vec3 vec3::rgb() { return vec3(m_v1, m_v2, m_v3); }
vec3 vec3::rbr() { return vec3(m_v1, m_v3, m_v1); }
vec3 vec3::rbg() { return vec3(m_v1, m_v3, m_v2); }
vec3 vec3::rbb() { return vec3(m_v1, m_v3, m_v3); }
vec3 vec3::grr() { return vec3(m_v2, m_v1, m_v1); }
vec3 vec3::grg() { return vec3(m_v2, m_v1, m_v2); }
vec3 vec3::grb() { return vec3(m_v2, m_v1, m_v3); }
vec3 vec3::ggr() { return vec3(m_v2, m_v2, m_v1); }
vec3 vec3::ggg() { return vec3(m_v2, m_v2, m_v2); }
vec3 vec3::ggb() { return vec3(m_v2, m_v2, m_v3); }
vec3 vec3::gbr() { return vec3(m_v2, m_v3, m_v1); }
vec3 vec3::gbg() { return vec3(m_v2, m_v3, m_v2); }
vec3 vec3::gbb() { return vec3(m_v2, m_v3, m_v3); }
vec3 vec3::brr() { return vec3(m_v3, m_v1, m_v1); }
vec3 vec3::brg() { return vec3(m_v3, m_v1, m_v2); }
vec3 vec3::brb() { return vec3(m_v3, m_v1, m_v3); }
vec3 vec3::bgr() { return vec3(m_v3, m_v2, m_v1); }
vec3 vec3::bgg() { return vec3(m_v3, m_v2, m_v2); }
vec3 vec3::bgb() { return vec3(m_v3, m_v2, m_v3); }
vec3 vec3::bbr() { return vec3(m_v3, m_v3, m_v1); }
vec3 vec3::bbg() { return vec3(m_v3, m_v3, m_v2); }
vec3 vec3::bbb() { return vec3(m_v3, m_v3, m_v3); }
vec3 vec3::sss() { return vec3(m_v1, m_v1, m_v1); }
vec3 vec3::sst() { return vec3(m_v1, m_v1, m_v2); }
vec3 vec3::ssp() { return vec3(m_v1, m_v1, m_v3); }
vec3 vec3::sts() { return vec3(m_v1, m_v2, m_v1); }
vec3 vec3::stt() { return vec3(m_v1, m_v2, m_v2); }
vec3 vec3::stp() { return vec3(m_v1, m_v2, m_v3); }
vec3 vec3::sps() { return vec3(m_v1, m_v3, m_v1); }
vec3 vec3::spt() { return vec3(m_v1, m_v3, m_v2); }
vec3 vec3::spp() { return vec3(m_v1, m_v3, m_v3); }
vec3 vec3::tss() { return vec3(m_v2, m_v1, m_v1); }
vec3 vec3::tst() { return vec3(m_v2, m_v1, m_v2); }
vec3 vec3::tsp() { return vec3(m_v2, m_v1, m_v3); }
vec3 vec3::tts() { return vec3(m_v2, m_v2, m_v1); }
vec3 vec3::ttt() { return vec3(m_v2, m_v2, m_v2); }
vec3 vec3::ttp() { return vec3(m_v2, m_v2, m_v3); }
vec3 vec3::tps() { return vec3(m_v2, m_v3, m_v1); }
vec3 vec3::tpt() { return vec3(m_v2, m_v3, m_v2); }
vec3 vec3::tpp() { return vec3(m_v2, m_v3, m_v3); }
vec3 vec3::pss() { return vec3(m_v3, m_v1, m_v1); }
vec3 vec3::pst() { return vec3(m_v3, m_v1, m_v2); }
vec3 vec3::psp() { return vec3(m_v3, m_v1, m_v3); }
vec3 vec3::pts() { return vec3(m_v3, m_v2, m_v1); }
vec3 vec3::ptt() { return vec3(m_v3, m_v2, m_v2); }
vec3 vec3::ptp() { return vec3(m_v3, m_v2, m_v3); }
vec3 vec3::pps() { return vec3(m_v3, m_v3, m_v1); }
vec3 vec3::ppt() { return vec3(m_v3, m_v3, m_v2); }
vec3 vec3::ppp() { return vec3(m_v3, m_v3, m_v3); }

// vec4 returns
vec4 vec3::xxxx() { return vec4(m_v1, m_v1, m_v1, m_v1); }
vec4 vec3::xxxy() { return vec4(m_v1, m_v1, m_v1, m_v2); }
vec4 vec3::xxxz() { return vec4(m_v1, m_v1, m_v1, m_v3); }
vec4 vec3::xxyx() { return vec4(m_v1, m_v1, m_v2, m_v1); }
vec4 vec3::xxyy() { return vec4(m_v1, m_v1, m_v2, m_v2); }
vec4 vec3::xxyz() { return vec4(m_v1, m_v1, m_v2, m_v3); }
vec4 vec3::xxzx() { return vec4(m_v1, m_v1, m_v3, m_v1); }
vec4 vec3::xxzy() { return vec4(m_v1, m_v1, m_v3, m_v2); }
vec4 vec3::xxzz() { return vec4(m_v1, m_v1, m_v3, m_v3); }
vec4 vec3::xyxx() { return vec4(m_v1, m_v2, m_v1, m_v1); }
vec4 vec3::xyxy() { return vec4(m_v1, m_v2, m_v1, m_v2); }
vec4 vec3::xyxz() { return vec4(m_v1, m_v2, m_v1, m_v3); }
vec4 vec3::xyyx() { return vec4(m_v1, m_v2, m_v2, m_v1); }
vec4 vec3::xyyy() { return vec4(m_v1, m_v2, m_v2, m_v2); }
vec4 vec3::xyyz() { return vec4(m_v1, m_v2, m_v2, m_v3); }
vec4 vec3::xyzx() { return vec4(m_v1, m_v2, m_v3, m_v1); }
vec4 vec3::xyzy() { return vec4(m_v1, m_v2, m_v3, m_v2); }
vec4 vec3::xyzz() { return vec4(m_v1, m_v2, m_v3, m_v3); }
vec4 vec3::xzxx() { return vec4(m_v1, m_v3, m_v1, m_v1); }
vec4 vec3::xzxy() { return vec4(m_v1, m_v3, m_v1, m_v2); }
vec4 vec3::xzxz() { return vec4(m_v1, m_v3, m_v1, m_v3); }
vec4 vec3::xzyx() { return vec4(m_v1, m_v3, m_v2, m_v1); }
vec4 vec3::xzyy() { return vec4(m_v1, m_v3, m_v2, m_v2); }
vec4 vec3::xzyz() { return vec4(m_v1, m_v3, m_v2, m_v3); }
vec4 vec3::xzzx() { return vec4(m_v1, m_v3, m_v3, m_v1); }
vec4 vec3::xzzy() { return vec4(m_v1, m_v3, m_v3, m_v2); }
vec4 vec3::xzzz() { return vec4(m_v1, m_v3, m_v3, m_v3); }
vec4 vec3::yxxx() { return vec4(m_v2, m_v1, m_v1, m_v1); }
vec4 vec3::yxxy() { return vec4(m_v2, m_v1, m_v1, m_v2); }
vec4 vec3::yxxz() { return vec4(m_v2, m_v1, m_v1, m_v3); }
vec4 vec3::yxyx() { return vec4(m_v2, m_v1, m_v2, m_v1); }
vec4 vec3::yxyy() { return vec4(m_v2, m_v1, m_v2, m_v2); }
vec4 vec3::yxyz() { return vec4(m_v2, m_v1, m_v2, m_v3); }
vec4 vec3::yxzx() { return vec4(m_v2, m_v1, m_v3, m_v1); }
vec4 vec3::yxzy() { return vec4(m_v2, m_v1, m_v3, m_v2); }
vec4 vec3::yxzz() { return vec4(m_v2, m_v1, m_v3, m_v3); }
vec4 vec3::yyxx() { return vec4(m_v2, m_v2, m_v1, m_v1); }
vec4 vec3::yyxy() { return vec4(m_v2, m_v2, m_v1, m_v2); }
vec4 vec3::yyxz() { return vec4(m_v2, m_v2, m_v1, m_v3); }
vec4 vec3::yyyx() { return vec4(m_v2, m_v2, m_v2, m_v1); }
vec4 vec3::yyyy() { return vec4(m_v2, m_v2, m_v2, m_v2); }
vec4 vec3::yyyz() { return vec4(m_v2, m_v2, m_v2, m_v3); }
vec4 vec3::yyzx() { return vec4(m_v2, m_v2, m_v3, m_v1); }
vec4 vec3::yyzy() { return vec4(m_v2, m_v2, m_v3, m_v2); }
vec4 vec3::yyzz() { return vec4(m_v2, m_v2, m_v3, m_v3); }
vec4 vec3::yzxx() { return vec4(m_v2, m_v3, m_v1, m_v1); }
vec4 vec3::yzxy() { return vec4(m_v2, m_v3, m_v1, m_v2); }
vec4 vec3::yzxz() { return vec4(m_v2, m_v3, m_v1, m_v3); }
vec4 vec3::yzyx() { return vec4(m_v2, m_v3, m_v2, m_v1); }
vec4 vec3::yzyy() { return vec4(m_v2, m_v3, m_v2, m_v2); }
vec4 vec3::yzyz() { return vec4(m_v2, m_v3, m_v2, m_v3); }
vec4 vec3::yzzx() { return vec4(m_v2, m_v3, m_v3, m_v1); }
vec4 vec3::yzzy() { return vec4(m_v2, m_v3, m_v3, m_v2); }
vec4 vec3::yzzz() { return vec4(m_v2, m_v3, m_v3, m_v3); }
vec4 vec3::zxxx() { return vec4(m_v3, m_v1, m_v1, m_v1); }
vec4 vec3::zxxy() { return vec4(m_v3, m_v1, m_v1, m_v2); }
vec4 vec3::zxxz() { return vec4(m_v3, m_v1, m_v1, m_v3); }
vec4 vec3::zxyx() { return vec4(m_v3, m_v1, m_v2, m_v1); }
vec4 vec3::zxyy() { return vec4(m_v3, m_v1, m_v2, m_v2); }
vec4 vec3::zxyz() { return vec4(m_v3, m_v1, m_v2, m_v3); }
vec4 vec3::zxzx() { return vec4(m_v3, m_v1, m_v3, m_v1); }
vec4 vec3::zxzy() { return vec4(m_v3, m_v1, m_v3, m_v2); }
vec4 vec3::zxzz() { return vec4(m_v3, m_v1, m_v3, m_v3); }
vec4 vec3::zyxx() { return vec4(m_v3, m_v2, m_v1, m_v1); }
vec4 vec3::zyxy() { return vec4(m_v3, m_v2, m_v1, m_v2); }
vec4 vec3::zyxz() { return vec4(m_v3, m_v2, m_v1, m_v3); }
vec4 vec3::zyyx() { return vec4(m_v3, m_v2, m_v2, m_v1); }
vec4 vec3::zyyy() { return vec4(m_v3, m_v2, m_v2, m_v2); }
vec4 vec3::zyyz() { return vec4(m_v3, m_v2, m_v2, m_v3); }
vec4 vec3::zyzx() { return vec4(m_v3, m_v2, m_v3, m_v1); }
vec4 vec3::zyzy() { return vec4(m_v3, m_v2, m_v3, m_v2); }
vec4 vec3::zyzz() { return vec4(m_v3, m_v2, m_v3, m_v3); }
vec4 vec3::zzxx() { return vec4(m_v3, m_v3, m_v1, m_v1); }
vec4 vec3::zzxy() { return vec4(m_v3, m_v3, m_v1, m_v2); }
vec4 vec3::zzxz() { return vec4(m_v3, m_v3, m_v1, m_v3); }
vec4 vec3::zzyx() { return vec4(m_v3, m_v3, m_v2, m_v1); }
vec4 vec3::zzyy() { return vec4(m_v3, m_v3, m_v2, m_v2); }
vec4 vec3::zzyz() { return vec4(m_v3, m_v3, m_v2, m_v3); }
vec4 vec3::zzzx() { return vec4(m_v3, m_v3, m_v3, m_v1); }
vec4 vec3::zzzy() { return vec4(m_v3, m_v3, m_v3, m_v2); }
vec4 vec3::zzzz() { return vec4(m_v3, m_v3, m_v3, m_v3); }
vec4 vec3::rrrr() { return vec4(m_v1, m_v1, m_v1, m_v1); }
vec4 vec3::rrrg() { return vec4(m_v1, m_v1, m_v1, m_v2); }
vec4 vec3::rrrb() { return vec4(m_v1, m_v1, m_v1, m_v3); }
vec4 vec3::rrgr() { return vec4(m_v1, m_v1, m_v2, m_v1); }
vec4 vec3::rrgg() { return vec4(m_v1, m_v1, m_v2, m_v2); }
vec4 vec3::rrgb() { return vec4(m_v1, m_v1, m_v2, m_v3); }
vec4 vec3::rrbr() { return vec4(m_v1, m_v1, m_v3, m_v1); }
vec4 vec3::rrbg() { return vec4(m_v1, m_v1, m_v3, m_v2); }
vec4 vec3::rrbb() { return vec4(m_v1, m_v1, m_v3, m_v3); }
vec4 vec3::rgrr() { return vec4(m_v1, m_v2, m_v1, m_v1); }
vec4 vec3::rgrg() { return vec4(m_v1, m_v2, m_v1, m_v2); }
vec4 vec3::rgrb() { return vec4(m_v1, m_v2, m_v1, m_v3); }
vec4 vec3::rggr() { return vec4(m_v1, m_v2, m_v2, m_v1); }
vec4 vec3::rggg() { return vec4(m_v1, m_v2, m_v2, m_v2); }
vec4 vec3::rggb() { return vec4(m_v1, m_v2, m_v2, m_v3); }
vec4 vec3::rgbr() { return vec4(m_v1, m_v2, m_v3, m_v1); }
vec4 vec3::rgbg() { return vec4(m_v1, m_v2, m_v3, m_v2); }
vec4 vec3::rgbb() { return vec4(m_v1, m_v2, m_v3, m_v3); }
vec4 vec3::rbrr() { return vec4(m_v1, m_v3, m_v1, m_v1); }
vec4 vec3::rbrg() { return vec4(m_v1, m_v3, m_v1, m_v2); }
vec4 vec3::rbrb() { return vec4(m_v1, m_v3, m_v1, m_v3); }
vec4 vec3::rbgr() { return vec4(m_v1, m_v3, m_v2, m_v1); }
vec4 vec3::rbgg() { return vec4(m_v1, m_v3, m_v2, m_v2); }
vec4 vec3::rbgb() { return vec4(m_v1, m_v3, m_v2, m_v3); }
vec4 vec3::rbbr() { return vec4(m_v1, m_v3, m_v3, m_v1); }
vec4 vec3::rbbg() { return vec4(m_v1, m_v3, m_v3, m_v2); }
vec4 vec3::rbbb() { return vec4(m_v1, m_v3, m_v3, m_v3); }
vec4 vec3::grrr() { return vec4(m_v2, m_v1, m_v1, m_v1); }
vec4 vec3::grrg() { return vec4(m_v2, m_v1, m_v1, m_v2); }
vec4 vec3::grrb() { return vec4(m_v2, m_v1, m_v1, m_v3); }
vec4 vec3::grgr() { return vec4(m_v2, m_v1, m_v2, m_v1); }
vec4 vec3::grgg() { return vec4(m_v2, m_v1, m_v2, m_v2); }
vec4 vec3::grgb() { return vec4(m_v2, m_v1, m_v2, m_v3); }
vec4 vec3::grbr() { return vec4(m_v2, m_v1, m_v3, m_v1); }
vec4 vec3::grbg() { return vec4(m_v2, m_v1, m_v3, m_v2); }
vec4 vec3::grbb() { return vec4(m_v2, m_v1, m_v3, m_v3); }
vec4 vec3::ggrr() { return vec4(m_v2, m_v2, m_v1, m_v1); }
vec4 vec3::ggrg() { return vec4(m_v2, m_v2, m_v1, m_v2); }
vec4 vec3::ggrb() { return vec4(m_v2, m_v2, m_v1, m_v3); }
vec4 vec3::gggr() { return vec4(m_v2, m_v2, m_v2, m_v1); }
vec4 vec3::gggg() { return vec4(m_v2, m_v2, m_v2, m_v2); }
vec4 vec3::gggb() { return vec4(m_v2, m_v2, m_v2, m_v3); }
vec4 vec3::ggbr() { return vec4(m_v2, m_v2, m_v3, m_v1); }
vec4 vec3::ggbg() { return vec4(m_v2, m_v2, m_v3, m_v2); }
vec4 vec3::ggbb() { return vec4(m_v2, m_v2, m_v3, m_v3); }
vec4 vec3::gbrr() { return vec4(m_v2, m_v3, m_v1, m_v1); }
vec4 vec3::gbrg() { return vec4(m_v2, m_v3, m_v1, m_v2); }
vec4 vec3::gbrb() { return vec4(m_v2, m_v3, m_v1, m_v3); }
vec4 vec3::gbgr() { return vec4(m_v2, m_v3, m_v2, m_v1); }
vec4 vec3::gbgg() { return vec4(m_v2, m_v3, m_v2, m_v2); }
vec4 vec3::gbgb() { return vec4(m_v2, m_v3, m_v2, m_v3); }
vec4 vec3::gbbr() { return vec4(m_v2, m_v3, m_v3, m_v1); }
vec4 vec3::gbbg() { return vec4(m_v2, m_v3, m_v3, m_v2); }
vec4 vec3::gbbb() { return vec4(m_v2, m_v3, m_v3, m_v3); }
vec4 vec3::brrr() { return vec4(m_v3, m_v1, m_v1, m_v1); }
vec4 vec3::brrg() { return vec4(m_v3, m_v1, m_v1, m_v2); }
vec4 vec3::brrb() { return vec4(m_v3, m_v1, m_v1, m_v3); }
vec4 vec3::brgr() { return vec4(m_v3, m_v1, m_v2, m_v1); }
vec4 vec3::brgg() { return vec4(m_v3, m_v1, m_v2, m_v2); }
vec4 vec3::brgb() { return vec4(m_v3, m_v1, m_v2, m_v3); }
vec4 vec3::brbr() { return vec4(m_v3, m_v1, m_v3, m_v1); }
vec4 vec3::brbg() { return vec4(m_v3, m_v1, m_v3, m_v2); }
vec4 vec3::brbb() { return vec4(m_v3, m_v1, m_v3, m_v3); }
vec4 vec3::bgrr() { return vec4(m_v3, m_v2, m_v1, m_v1); }
vec4 vec3::bgrg() { return vec4(m_v3, m_v2, m_v1, m_v2); }
vec4 vec3::bgrb() { return vec4(m_v3, m_v2, m_v1, m_v3); }
vec4 vec3::bggr() { return vec4(m_v3, m_v2, m_v2, m_v1); }
vec4 vec3::bggg() { return vec4(m_v3, m_v2, m_v2, m_v2); }
vec4 vec3::bggb() { return vec4(m_v3, m_v2, m_v2, m_v3); }
vec4 vec3::bgbr() { return vec4(m_v3, m_v2, m_v3, m_v1); }
vec4 vec3::bgbg() { return vec4(m_v3, m_v2, m_v3, m_v2); }
vec4 vec3::bgbb() { return vec4(m_v3, m_v2, m_v3, m_v3); }
vec4 vec3::bbrr() { return vec4(m_v3, m_v3, m_v1, m_v1); }
vec4 vec3::bbrg() { return vec4(m_v3, m_v3, m_v1, m_v2); }
vec4 vec3::bbrb() { return vec4(m_v3, m_v3, m_v1, m_v3); }
vec4 vec3::bbgr() { return vec4(m_v3, m_v3, m_v2, m_v1); }
vec4 vec3::bbgg() { return vec4(m_v3, m_v3, m_v2, m_v2); }
vec4 vec3::bbgb() { return vec4(m_v3, m_v3, m_v2, m_v3); }
vec4 vec3::bbbr() { return vec4(m_v3, m_v3, m_v3, m_v1); }
vec4 vec3::bbbg() { return vec4(m_v3, m_v3, m_v3, m_v2); }
vec4 vec3::bbbb() { return vec4(m_v3, m_v3, m_v3, m_v3); }
vec4 vec3::ssss() { return vec4(m_v1, m_v1, m_v1, m_v1); }
vec4 vec3::ssst() { return vec4(m_v1, m_v1, m_v1, m_v2); }
vec4 vec3::sssp() { return vec4(m_v1, m_v1, m_v1, m_v3); }
vec4 vec3::ssts() { return vec4(m_v1, m_v1, m_v2, m_v1); }
vec4 vec3::sstt() { return vec4(m_v1, m_v1, m_v2, m_v2); }
vec4 vec3::sstp() { return vec4(m_v1, m_v1, m_v2, m_v3); }
vec4 vec3::ssps() { return vec4(m_v1, m_v1, m_v3, m_v1); }
vec4 vec3::sspt() { return vec4(m_v1, m_v1, m_v3, m_v2); }
vec4 vec3::sspp() { return vec4(m_v1, m_v1, m_v3, m_v3); }
vec4 vec3::stss() { return vec4(m_v1, m_v2, m_v1, m_v1); }
vec4 vec3::stst() { return vec4(m_v1, m_v2, m_v1, m_v2); }
vec4 vec3::stsp() { return vec4(m_v1, m_v2, m_v1, m_v3); }
vec4 vec3::stts() { return vec4(m_v1, m_v2, m_v2, m_v1); }
vec4 vec3::sttt() { return vec4(m_v1, m_v2, m_v2, m_v2); }
vec4 vec3::sttp() { return vec4(m_v1, m_v2, m_v2, m_v3); }
vec4 vec3::stps() { return vec4(m_v1, m_v2, m_v3, m_v1); }
vec4 vec3::stpt() { return vec4(m_v1, m_v2, m_v3, m_v2); }
vec4 vec3::stpp() { return vec4(m_v1, m_v2, m_v3, m_v3); }
vec4 vec3::spss() { return vec4(m_v1, m_v3, m_v1, m_v1); }
vec4 vec3::spst() { return vec4(m_v1, m_v3, m_v1, m_v2); }
vec4 vec3::spsp() { return vec4(m_v1, m_v3, m_v1, m_v3); }
vec4 vec3::spts() { return vec4(m_v1, m_v3, m_v2, m_v1); }
vec4 vec3::sptt() { return vec4(m_v1, m_v3, m_v2, m_v2); }
vec4 vec3::sptp() { return vec4(m_v1, m_v3, m_v2, m_v3); }
vec4 vec3::spps() { return vec4(m_v1, m_v3, m_v3, m_v1); }
vec4 vec3::sppt() { return vec4(m_v1, m_v3, m_v3, m_v2); }
vec4 vec3::sppp() { return vec4(m_v1, m_v3, m_v3, m_v3); }
vec4 vec3::tsss() { return vec4(m_v2, m_v1, m_v1, m_v1); }
vec4 vec3::tsst() { return vec4(m_v2, m_v1, m_v1, m_v2); }
vec4 vec3::tssp() { return vec4(m_v2, m_v1, m_v1, m_v3); }
vec4 vec3::tsts() { return vec4(m_v2, m_v1, m_v2, m_v1); }
vec4 vec3::tstt() { return vec4(m_v2, m_v1, m_v2, m_v2); }
vec4 vec3::tstp() { return vec4(m_v2, m_v1, m_v2, m_v3); }
vec4 vec3::tsps() { return vec4(m_v2, m_v1, m_v3, m_v1); }
vec4 vec3::tspt() { return vec4(m_v2, m_v1, m_v3, m_v2); }
vec4 vec3::tspp() { return vec4(m_v2, m_v1, m_v3, m_v3); }
vec4 vec3::ttss() { return vec4(m_v2, m_v2, m_v1, m_v1); }
vec4 vec3::ttst() { return vec4(m_v2, m_v2, m_v1, m_v2); }
vec4 vec3::ttsp() { return vec4(m_v2, m_v2, m_v1, m_v3); }
vec4 vec3::ttts() { return vec4(m_v2, m_v2, m_v2, m_v1); }
vec4 vec3::tttt() { return vec4(m_v2, m_v2, m_v2, m_v2); }
vec4 vec3::tttp() { return vec4(m_v2, m_v2, m_v2, m_v3); }
vec4 vec3::ttps() { return vec4(m_v2, m_v2, m_v3, m_v1); }
vec4 vec3::ttpt() { return vec4(m_v2, m_v2, m_v3, m_v2); }
vec4 vec3::ttpp() { return vec4(m_v2, m_v2, m_v3, m_v3); }
vec4 vec3::tpss() { return vec4(m_v2, m_v3, m_v1, m_v1); }
vec4 vec3::tpst() { return vec4(m_v2, m_v3, m_v1, m_v2); }
vec4 vec3::tpsp() { return vec4(m_v2, m_v3, m_v1, m_v3); }
vec4 vec3::tpts() { return vec4(m_v2, m_v3, m_v2, m_v1); }
vec4 vec3::tptt() { return vec4(m_v2, m_v3, m_v2, m_v2); }
vec4 vec3::tptp() { return vec4(m_v2, m_v3, m_v2, m_v3); }
vec4 vec3::tpps() { return vec4(m_v2, m_v3, m_v3, m_v1); }
vec4 vec3::tppt() { return vec4(m_v2, m_v3, m_v3, m_v2); }
vec4 vec3::tppp() { return vec4(m_v2, m_v3, m_v3, m_v3); }
vec4 vec3::psss() { return vec4(m_v3, m_v1, m_v1, m_v1); }
vec4 vec3::psst() { return vec4(m_v3, m_v1, m_v1, m_v2); }
vec4 vec3::pssp() { return vec4(m_v3, m_v1, m_v1, m_v3); }
vec4 vec3::psts() { return vec4(m_v3, m_v1, m_v2, m_v1); }
vec4 vec3::pstt() { return vec4(m_v3, m_v1, m_v2, m_v2); }
vec4 vec3::pstp() { return vec4(m_v3, m_v1, m_v2, m_v3); }
vec4 vec3::psps() { return vec4(m_v3, m_v1, m_v3, m_v1); }
vec4 vec3::pspt() { return vec4(m_v3, m_v1, m_v3, m_v2); }
vec4 vec3::pspp() { return vec4(m_v3, m_v1, m_v3, m_v3); }
vec4 vec3::ptss() { return vec4(m_v3, m_v2, m_v1, m_v1); }
vec4 vec3::ptst() { return vec4(m_v3, m_v2, m_v1, m_v2); }
vec4 vec3::ptsp() { return vec4(m_v3, m_v2, m_v1, m_v3); }
vec4 vec3::ptts() { return vec4(m_v3, m_v2, m_v2, m_v1); }
vec4 vec3::pttt() { return vec4(m_v3, m_v2, m_v2, m_v2); }
vec4 vec3::pttp() { return vec4(m_v3, m_v2, m_v2, m_v3); }
vec4 vec3::ptps() { return vec4(m_v3, m_v2, m_v3, m_v1); }
vec4 vec3::ptpt() { return vec4(m_v3, m_v2, m_v3, m_v2); }
vec4 vec3::ptpp() { return vec4(m_v3, m_v2, m_v3, m_v3); }
vec4 vec3::ppss() { return vec4(m_v3, m_v3, m_v1, m_v1); }
vec4 vec3::ppst() { return vec4(m_v3, m_v3, m_v1, m_v2); }
vec4 vec3::ppsp() { return vec4(m_v3, m_v3, m_v1, m_v3); }
vec4 vec3::ppts() { return vec4(m_v3, m_v3, m_v2, m_v1); }
vec4 vec3::pptt() { return vec4(m_v3, m_v3, m_v2, m_v2); }
vec4 vec3::pptp() { return vec4(m_v3, m_v3, m_v2, m_v3); }
vec4 vec3::ppps() { return vec4(m_v3, m_v3, m_v3, m_v1); }
vec4 vec3::pppt() { return vec4(m_v3, m_v3, m_v3, m_v2); }
vec4 vec3::pppp() { return vec4(m_v3, m_v3, m_v3, m_v3); }

// ptr access
float* vec3::pointer()
{
    if(!m_vecPtr) m_vecPtr = new float[3];
    m_vecPtr[0] = m_v1;
    m_vecPtr[1] = m_v2;
    m_vecPtr[2] = m_v3;
    return m_vecPtr;
}

// math and whatnot
vec3 vec3::operator+(const vec3& rhs) const
{
	vec3 v;
	v.x() = m_v1 + rhs.x();
	v.y() = m_v2 + rhs.y();
	v.z() = m_v3 + rhs.z();
	return v;
}

vec3 vec3::operator-(const vec3& rhs) const
{
	vec3 v;
	v.x() = m_v1 - rhs.x();
	v.y() = m_v2 - rhs.y();
	v.z() = m_v3 - rhs.z();
	return v;
}

vec3 vec3::operator*(const vec3& rhs) const
{
    vec3 v;
    v.x() = m_v1 * rhs.x();
    v.y() = m_v2 * rhs.y();
    v.z() = m_v3 * rhs.z();
    return v;
}

vec3 vec3::operator/(const vec3& rhs) const
{
    vec3 v;
    v.x() = m_v1 / rhs.x();
    v.y() = m_v2 / rhs.y();
    v.z() = m_v3 / rhs.z();
    return v;
}

float vec3::dot(const vec3& rhs) const
{
	return (m_v1*rhs.x()) + (m_v2*rhs.y()) + (m_v3*rhs.z());
}

vec3 vec3::cross(const vec3& rhs) const
{
    vec3 xproduct;
    xproduct.x() = (m_v2 * rhs.z()) - (rhs.y() * m_v3);
    xproduct.y() = (m_v1 * rhs.y()) - (rhs.x() * m_v3);
    xproduct.z() = (m_v1 * rhs.y()) - (rhs.x() * m_v2);
    return xproduct;
}

float vec3::length()
{
    return sqrt((m_v1*m_v1) + (m_v2*m_v2) + (m_v3*m_v3));
}

float vec3::length2()
{
    return (m_v1*m_v1) + (m_v2*m_v2) + (m_v3*m_v3);
}

bool vec3::operator==(const vec3& rhs) const
{
	return (m_v1 == rhs.x()) && (m_v2 == rhs.y()) && (m_v3 == rhs.z());
}


//---------------------------------
//        vec2 data access
//---------------------------------

vec2::vec2() { m_v1 = 0; m_v2 = 0; m_vecPtr = NULL; }
vec2::vec2(float value) { m_v1 = value; m_v2 = value; m_vecPtr = NULL;  }
vec2::vec2(float val1, float val2) { m_v1 = val1; m_v2 = val2; m_vecPtr = NULL;  }

// dtor
vec2::~vec2() { if(m_vecPtr) delete m_vecPtr; }
	
// scalar returns
float& vec2::x() { return m_v1; }
const float& vec2::x() const { return m_v1; }
float& vec2::y() { return m_v2; }
const float& vec2::y() const { return m_v2; }
float& vec2::r() { return m_v1; }
const float& vec2::r() const { return m_v1; }
float& vec2::g() { return m_v2; }
const float& vec2::g() const { return m_v2; }
float& vec2::s() { return m_v1; }
const float& vec2::s() const { return m_v1; }
float& vec2::t() { return m_v2; }
const float& vec2::t() const { return m_v2; }

// vec2 returns
vec2 vec2::xx() { return vec2(m_v1, m_v1); }
vec2 vec2::xy() { return vec2(m_v1, m_v2); }
vec2 vec2::yx() { return vec2(m_v2, m_v1); }
vec2 vec2::yy() { return vec2(m_v2, m_v2); }
vec2 vec2::rr() { return vec2(m_v1, m_v1); }
vec2 vec2::rg() { return vec2(m_v1, m_v2); }
vec2 vec2::gr() { return vec2(m_v2, m_v1); }
vec2 vec2::gg() { return vec2(m_v2, m_v2); }
vec2 vec2::ss() { return vec2(m_v1, m_v1); }
vec2 vec2::st() { return vec2(m_v1, m_v2); }
vec2 vec2::ts() { return vec2(m_v2, m_v1); }
vec2 vec2::tt() { return vec2(m_v2, m_v2); }

// vec3 returns
vec3 vec2::xxx() { return vec3(m_v1, m_v1, m_v1); }
vec3 vec2::xxy() { return vec3(m_v1, m_v1, m_v2); }
vec3 vec2::xyx() { return vec3(m_v1, m_v2, m_v1); }
vec3 vec2::xyy() { return vec3(m_v1, m_v2, m_v2); }
vec3 vec2::yxx() { return vec3(m_v2, m_v1, m_v1); }
vec3 vec2::yxy() { return vec3(m_v2, m_v1, m_v2); }
vec3 vec2::yyx() { return vec3(m_v2, m_v2, m_v1); }
vec3 vec2::yyy() { return vec3(m_v2, m_v2, m_v2); }
vec3 vec2::rrr() { return vec3(m_v1, m_v1, m_v1); }
vec3 vec2::rrg() { return vec3(m_v1, m_v1, m_v2); }
vec3 vec2::rgr() { return vec3(m_v1, m_v2, m_v1); }
vec3 vec2::rgg() { return vec3(m_v1, m_v2, m_v2); }
vec3 vec2::grr() { return vec3(m_v2, m_v1, m_v1); }
vec3 vec2::grg() { return vec3(m_v2, m_v1, m_v2); }
vec3 vec2::ggr() { return vec3(m_v2, m_v2, m_v1); }
vec3 vec2::ggg() { return vec3(m_v2, m_v2, m_v2); }
vec3 vec2::sss() { return vec3(m_v1, m_v1, m_v1); }
vec3 vec2::sst() { return vec3(m_v1, m_v1, m_v2); }
vec3 vec2::sts() { return vec3(m_v1, m_v2, m_v1); }
vec3 vec2::stt() { return vec3(m_v1, m_v2, m_v2); }
vec3 vec2::tss() { return vec3(m_v2, m_v1, m_v1); }
vec3 vec2::tst() { return vec3(m_v2, m_v1, m_v2); }
vec3 vec2::tts() { return vec3(m_v2, m_v2, m_v1); }
vec3 vec2::ttt() { return vec3(m_v2, m_v2, m_v2); }

// vec4 returns
vec4 vec2::xxxx() { return vec4(m_v1, m_v1, m_v1, m_v1); }
vec4 vec2::xxxy() { return vec4(m_v1, m_v1, m_v1, m_v2); }
vec4 vec2::xxyx() { return vec4(m_v1, m_v1, m_v2, m_v1); }
vec4 vec2::xxyy() { return vec4(m_v1, m_v1, m_v2, m_v2); }
vec4 vec2::xyxx() { return vec4(m_v1, m_v2, m_v1, m_v1); }
vec4 vec2::xyxy() { return vec4(m_v1, m_v2, m_v1, m_v2); }
vec4 vec2::xyyx() { return vec4(m_v1, m_v2, m_v2, m_v1); }
vec4 vec2::xyyy() { return vec4(m_v1, m_v2, m_v2, m_v2); }
vec4 vec2::yxxx() { return vec4(m_v2, m_v1, m_v1, m_v1); }
vec4 vec2::yxxy() { return vec4(m_v2, m_v1, m_v1, m_v2); }
vec4 vec2::yxyx() { return vec4(m_v2, m_v1, m_v2, m_v1); }
vec4 vec2::yxyy() { return vec4(m_v2, m_v1, m_v2, m_v2); }
vec4 vec2::yyxx() { return vec4(m_v2, m_v2, m_v1, m_v1); }
vec4 vec2::yyxy() { return vec4(m_v2, m_v2, m_v1, m_v2); }
vec4 vec2::yyyx() { return vec4(m_v2, m_v2, m_v2, m_v1); }
vec4 vec2::yyyy() { return vec4(m_v2, m_v2, m_v2, m_v2); }
vec4 vec2::rrrr() { return vec4(m_v1, m_v1, m_v1, m_v1); }
vec4 vec2::rrrg() { return vec4(m_v1, m_v1, m_v1, m_v2); }
vec4 vec2::rrgr() { return vec4(m_v1, m_v1, m_v2, m_v1); }
vec4 vec2::rrgg() { return vec4(m_v1, m_v1, m_v2, m_v2); }
vec4 vec2::rgrr() { return vec4(m_v1, m_v2, m_v1, m_v1); }
vec4 vec2::rgrg() { return vec4(m_v1, m_v2, m_v1, m_v2); }
vec4 vec2::rggr() { return vec4(m_v1, m_v2, m_v2, m_v1); }
vec4 vec2::rggg() { return vec4(m_v1, m_v2, m_v2, m_v2); }
vec4 vec2::grrr() { return vec4(m_v2, m_v1, m_v1, m_v1); }
vec4 vec2::grrg() { return vec4(m_v2, m_v1, m_v1, m_v2); }
vec4 vec2::grgr() { return vec4(m_v2, m_v1, m_v2, m_v1); }
vec4 vec2::grgg() { return vec4(m_v2, m_v1, m_v2, m_v2); }
vec4 vec2::ggrr() { return vec4(m_v2, m_v2, m_v1, m_v1); }
vec4 vec2::ggrg() { return vec4(m_v2, m_v2, m_v1, m_v2); }
vec4 vec2::gggr() { return vec4(m_v2, m_v2, m_v2, m_v1); }
vec4 vec2::gggg() { return vec4(m_v2, m_v2, m_v2, m_v2); }
vec4 vec2::ssss() { return vec4(m_v1, m_v1, m_v1, m_v1); }
vec4 vec2::ssst() { return vec4(m_v1, m_v1, m_v1, m_v2); }
vec4 vec2::ssts() { return vec4(m_v1, m_v1, m_v2, m_v1); }
vec4 vec2::sstt() { return vec4(m_v1, m_v1, m_v2, m_v2); }
vec4 vec2::stss() { return vec4(m_v1, m_v2, m_v1, m_v1); }
vec4 vec2::stst() { return vec4(m_v1, m_v2, m_v1, m_v2); }
vec4 vec2::stts() { return vec4(m_v1, m_v2, m_v2, m_v1); }
vec4 vec2::sttt() { return vec4(m_v1, m_v2, m_v2, m_v2); }
vec4 vec2::tsss() { return vec4(m_v2, m_v1, m_v1, m_v1); }
vec4 vec2::tsst() { return vec4(m_v2, m_v1, m_v1, m_v2); }
vec4 vec2::tsts() { return vec4(m_v2, m_v1, m_v2, m_v1); }
vec4 vec2::tstt() { return vec4(m_v2, m_v1, m_v2, m_v2); }
vec4 vec2::ttss() { return vec4(m_v2, m_v2, m_v1, m_v1); }
vec4 vec2::ttst() { return vec4(m_v2, m_v2, m_v1, m_v2); }
vec4 vec2::ttts() { return vec4(m_v2, m_v2, m_v2, m_v1); }
vec4 vec2::tttt() { return vec4(m_v2, m_v2, m_v2, m_v2); }

// ptr access
float* vec2::pointer()
{
    if(!m_vecPtr) m_vecPtr = new float[2];
    m_vecPtr[0] = m_v1;
    m_vecPtr[1] = m_v2;
    return m_vecPtr;
}

// math and whatnot
vec2 vec2::operator+(const vec2& rhs) const
{
	vec2 v;
	v.x() = m_v1 + rhs.x();
	v.y() = m_v2 + rhs.y();
	return v;
}

vec2 vec2::operator-(const vec2& rhs) const
{
	vec2 v;
	v.x() = m_v1 - rhs.x();
	v.y() = m_v2 - rhs.y();
	return v;
}

vec2 vec2::operator*(const vec2& rhs) const
{
    vec2 v;
    v.x() = m_v1 * rhs.x();
    v.y() = m_v2 * rhs.y();
    return v;
}

vec2 vec2::operator/(const vec2& rhs) const
{
    vec2 v;
    v.x() = m_v1 / rhs.x();
    v.y() = m_v2 / rhs.y();
    return v;
}

float vec2::dot(const vec2& rhs) const
{
	return (m_v1*rhs.x()) + (m_v1*rhs.y());
}

float vec2::cross(const vec2& rhs) const
{
    return (m_v1*rhs.y()) - (m_v2*rhs.x());
}

float vec2::length()
{
    return sqrt((m_v1*m_v1) + (m_v2*m_v2));
}

float vec2::length2()
{
    return (m_v1*m_v1) + (m_v2*m_v2);
}

bool vec2::operator==(const vec2& rhs) const
{
	return (m_v1 == rhs.x()) && (m_v2 == rhs.y());
}

